app:
  description: Welcome to the HR Assistance System. I'm here to help you with any
    questions or information you need regarding our company's HR policies, procedures,
    and guidelines.
  icon: dark_sunglasses
  icon_background: '#E0F2FE'
  mode: advanced-chat
  name: HR-FAQ-Bot-Kareem
  use_icon_as_answer_icon: true
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: langgenius/ollama:0.0.6@f430f3eb959f4863b1e87171544a8fec179441b90deda5693c85f07712d2a68c
kind: app
version: 0.3.1
workflow:
  conversation_variables:
  - description: ''
    id: 77e111cd-ed53-44be-927d-cab067a800b0
    name: chat_history
    selector:
    - conversation
    - chat_history
    value: {}
    value_type: object
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: Welcome to the HR Assistance System! I'm here to provide you
      with comprehensive support and information about all our company's HR policies,
      procedures, and guidelines. Feel free to ask any questions you may have. üòä
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions:
    - What can you do for me?
    - When can i ask for qard hasan?
    - How to get boubyan gig
    - ŸÖÿßÿ∞ÿß ŸäŸÖŸÉŸÜŸÉ ÿ£ŸÜ ÿ™ŸÅÿπŸÑ ŸÖŸÜ ÿ£ÿ¨ŸÑŸäÿü
    - ŸÖÿß ÿ¨Ÿàÿßÿ¶ÿ≤ ÿ≠ÿ≥ÿßÿ® ÿßŸÑÿ≥ÿπÿßÿØÿ©ÿü
    - ŸÖÿß ŸÖÿØÿ© ÿßÿ¨ÿßÿ≤ÿ© ÿßŸÑÿπÿ≤ÿßÿ°ÿü
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: code
        targetType: if-else
      id: 1736963436010-source-1734278249025-target
      selected: false
      source: '1736963436010'
      sourceHandle: source
      target: '1734278249025'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1716290672471-source-1739782903465-target
      selected: false
      source: '1716290672471'
      sourceHandle: source
      target: '1739782903465'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: assigner
      id: 1739782903465-source-1739782798068-target
      selected: false
      source: '1739782903465'
      sourceHandle: source
      target: '1739782798068'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: code
      id: 1739782798068-source-1739783725003-target
      selected: false
      source: '1739782798068'
      sourceHandle: source
      target: '1739783725003'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1739783725003-source-1734277262041-target
      selected: false
      source: '1739783725003'
      sourceHandle: source
      target: '1734277262041'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1740552982823-source-1736963436010-target
      selected: false
      source: '1740552982823'
      sourceHandle: source
      target: '1736963436010'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1734278249025-true-17372690270110-target
      selected: false
      source: '1734278249025'
      sourceHandle: 'true'
      target: '17372690270110'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 17372690270110-source-1739858038668-target
      selected: false
      source: '17372690270110'
      sourceHandle: source
      target: '1739858038668'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: assigner
      id: 1745315236880-source-1745315515092-target
      selected: false
      source: '1745315236880'
      sourceHandle: source
      target: '1745315515092'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: assigner
        targetType: answer
      id: 1745315515092-source-1717065070618-target
      selected: false
      source: '1745315515092'
      sourceHandle: source
      target: '1717065070618'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1745759008719-source-1739858038668-target
      selected: false
      source: '1745759008719'
      sourceHandle: source
      target: '1739858038668'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1740548230421-true-1745904416023-target
      selected: false
      source: '1740548230421'
      sourceHandle: 'true'
      target: '1745904416023'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1746008075423-true-1746016424681-target
      selected: false
      source: '1746008075423'
      sourceHandle: 'true'
      target: '1746016424681'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1740834697144-source-1746018244132-target
      selected: false
      source: '1740834697144'
      sourceHandle: source
      target: '1746018244132'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1746018244132-true-1746008075423-target
      selected: false
      source: '1746018244132'
      sourceHandle: 'true'
      target: '1746008075423'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1746018244132-false-17460178945620-target
      selected: false
      source: '1746018244132'
      sourceHandle: 'false'
      target: '17460178945620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17460178945620-false-17460179174320-target
      selected: false
      source: '17460178945620'
      sourceHandle: 'false'
      target: '17460179174320'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17460179174320-source-17460179285850-target
      selected: false
      source: '17460179174320'
      sourceHandle: source
      target: '17460179285850'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 17460178945620-true-17460179285850-target
      selected: false
      source: '17460178945620'
      sourceHandle: 'true'
      target: '17460179285850'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1734278249025-a74140d9-96e7-490a-bc76-3251f5347b01-1745759008719-target
      selected: false
      source: '1734278249025'
      sourceHandle: a74140d9-96e7-490a-bc76-3251f5347b01
      target: '1745759008719'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1734278249025-d0ac0985-ba25-4594-8677-c0384e3eb8b9-17460405924110-target
      selected: false
      source: '1734278249025'
      sourceHandle: d0ac0985-ba25-4594-8677-c0384e3eb8b9
      target: '17460405924110'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17460405924110-source-1739858038668-target
      selected: false
      source: '17460405924110'
      sourceHandle: source
      target: '1739858038668'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1734278249025-false-17460438306840-target
      selected: false
      source: '1734278249025'
      sourceHandle: 'false'
      target: '17460438306840'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 17460438306840-source-1739858038668-target
      selected: false
      source: '17460438306840'
      sourceHandle: source
      target: '1739858038668'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 17460179285850-source-1746342059414-target
      selected: false
      source: '17460179285850'
      sourceHandle: source
      target: '1746342059414'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 1746342509345-true-1740548230421-target
      selected: false
      source: '1746342509345'
      sourceHandle: 'true'
      target: '1740548230421'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1746016424681-source-17463502700320-target
      selected: false
      source: '1746016424681'
      sourceHandle: source
      target: '17463502700320'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: if-else
      id: 17463504203540-true-1740548230421-target
      selected: false
      source: '17463504203540'
      sourceHandle: 'true'
      target: '1740548230421'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1739858038668-source-1745315236880-target
      selected: false
      source: '1739858038668'
      sourceHandle: source
      target: '1745315236880'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1748414761482-source-1748414814447-target
      selected: false
      source: '1748414761482'
      sourceHandle: source
      target: '1748414814447'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1748426591842-source-1748426676928-target
      selected: false
      source: '1748426591842'
      sourceHandle: source
      target: '1748426676928'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1746342509345-false-1748426591842-target
      selected: false
      source: '1746342509345'
      sourceHandle: 'false'
      target: '1748426591842'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17463504203540-6cb35916-2fd4-4275-8e6d-6d24b6b13f83-1748862713728-target
      selected: false
      source: '17463504203540'
      sourceHandle: 6cb35916-2fd4-4275-8e6d-6d24b6b13f83
      target: '1748862713728'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1748862713728-source-1748862844056-target
      selected: false
      source: '1748862713728'
      sourceHandle: source
      target: '1748862844056'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1750326385463-source-1750326565070-target
      selected: false
      source: '1750326385463'
      sourceHandle: source
      target: '1750326565070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1739860244710-source-1746016424681-target
      selected: false
      source: '1739860244710'
      sourceHandle: source
      target: '1746016424681'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 1746342059414-source-1746342509345-target
      selected: false
      source: '1746342059414'
      sourceHandle: source
      target: '1746342509345'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1748414814447-source-1755084125884-target
      selected: false
      source: '1748414814447'
      sourceHandle: source
      target: '1755084125884'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1755084125884-source-1745756078108-target
      selected: false
      source: '1755084125884'
      sourceHandle: source
      target: '1745756078108'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1748426676928-source-1755149964269-target
      selected: false
      source: '1748426676928'
      sourceHandle: source
      target: '1755149964269'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1755149964269-source-17460180080440-target
      selected: false
      source: '1755149964269'
      sourceHandle: source
      target: '17460180080440'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1745904416023-source-17551504064580-target
      selected: false
      source: '1745904416023'
      sourceHandle: source
      target: '17551504064580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17551504064580-source-1740552982823-target
      selected: false
      source: '17551504064580'
      sourceHandle: source
      target: '1740552982823'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1740548230421-false-17551503028730-target
      selected: false
      source: '1740548230421'
      sourceHandle: 'false'
      target: '17551503028730'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17551503028730-source-1740552982823-target
      selected: false
      source: '17551503028730'
      sourceHandle: source
      target: '1740552982823'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 17463504203540-b593749e-0c2d-4e5a-aadc-f7870ba2cdae-1748414761482-target
      selected: false
      source: '17463504203540'
      sourceHandle: b593749e-0c2d-4e5a-aadc-f7870ba2cdae
      target: '1748414761482'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 17463504203540-false-1748414761482-target
      selected: false
      source: '17463504203540'
      sourceHandle: 'false'
      target: '1748414761482'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: if-else
      id: 17463502700320-source-17463504203540-target
      selected: false
      source: '17463502700320'
      sourceHandle: source
      target: '17463504203540'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 17463504203540-95e24648-4bd9-4a43-86ce-df41ee46f484-17575963520660-target
      selected: false
      source: '17463504203540'
      sourceHandle: 95e24648-4bd9-4a43-86ce-df41ee46f484
      target: '17575963520660'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 17575963520660-source-1746016606205-target
      selected: false
      source: '17575963520660'
      sourceHandle: source
      target: '1746016606205'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1746008075423-false-1739860244710-target
      selected: false
      source: '1746008075423'
      sourceHandle: 'false'
      target: '1739860244710'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1746342509345-95e24648-4bd9-4a43-86ce-df41ee46f484-17576025603600-target
      source: '1746342509345'
      sourceHandle: 95e24648-4bd9-4a43-86ce-df41ee46f484
      target: '17576025603600'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 17576025603600-source-17460180219870-target
      source: '17576025603600'
      sourceHandle: source
      target: '17460180219870'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1746342509345-deafb895-7fb7-4629-9bf1-3dd6a638af35-1750326385463-target
      source: '1746342509345'
      sourceHandle: deafb895-7fb7-4629-9bf1-3dd6a638af35
      target: '1750326385463'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1746342509345-872a1532-5168-4754-bdfa-6b23d97f9e81-1748426591842-target
      source: '1746342509345'
      sourceHandle: 872a1532-5168-4754-bdfa-6b23d97f9e81
      target: '1748426591842'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1734277262041-source-1740834697144-target
      source: '1734277262041'
      sourceHandle: source
      target: '1740834697144'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables: []
      height: 53
      id: '1716290672471'
      position:
        x: -1299.032147207492
        y: -272.16228902112186
      positionAbsolute:
        x: -1299.032147207492
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1739858038668.result#}}'
        desc: ''
        selected: false
        title: Final Answer
        type: answer
        variables: []
      height: 103
      id: '1717065070618'
      position:
        x: 7908.86231269374
        y: 683.1138261701558
      positionAbsolute:
        x: 7908.86231269374
        y: 683.1138261701558
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "import re\n\ndef main(text: str) -> dict:\n    if any('\\u0600' <=\
          \ char <= '\\u06FF' for char in text):\n        return {\"result\": \"Arabic\"\
          }\n    else:\n        return {\"result\": \"English\"}"
        code_language: python3
        desc: Detects the query language.
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Full Language Name
        type: code
        variables:
        - value_selector:
          - sys
          - query
          variable: text
      height: 81
      id: '1734277262041'
      position:
        x: 21.206148952835406
        y: -272.16228902112186
      positionAbsolute:
        x: 21.206148952835406
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: not empty
            id: d6ebc908-c9c9-409d-b779-47f225a4b9fb
            value: ''
            varType: string
            variable_selector:
            - '1736963436010'
            - questions_answers
          - comparison_operator: contains
            id: dcbb1829-e15a-4ec3-965d-374f7ab19821
            value: English
            varType: string
            variable_selector:
            - '1734277262041'
            - result
          id: 'true'
          logical_operator: and
        - case_id: a74140d9-96e7-490a-bc76-3251f5347b01
          conditions:
          - comparison_operator: empty
            id: a2839aeb-06cc-4c8f-8ced-80ae72549a20
            value: ''
            varType: string
            variable_selector:
            - '1736963436010'
            - questions_answers
          - comparison_operator: contains
            id: c4a01f07-c218-466e-b887-c6c5abf346dd
            value: English
            varType: string
            variable_selector:
            - '1734277262041'
            - result
          id: a74140d9-96e7-490a-bc76-3251f5347b01
          logical_operator: and
        - case_id: d0ac0985-ba25-4594-8677-c0384e3eb8b9
          conditions:
          - comparison_operator: not empty
            id: c8f4bbf5-84e0-49c1-9285-d0177b730804
            value: ''
            varType: string
            variable_selector:
            - '1736963436010'
            - questions_answers
          - comparison_operator: contains
            id: 56f757f4-7d2e-4f89-b076-d38b37f24b1f
            value: Arabic
            varType: string
            variable_selector:
            - '1734277262041'
            - result
          id: d0ac0985-ba25-4594-8677-c0384e3eb8b9
          logical_operator: and
        desc: Decides action based on retrieved KB if empty or not.
        selected: false
        title: IF/ELSE 3
        type: if-else
      height: 343
      id: '1734278249025'
      position:
        x: 6123.991639758409
        y: 538.8483443075141
      positionAbsolute:
        x: 6123.991639758409
        y: 538.8483443075141
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "import json\nimport re\n \ndef main(json_data):\n    # A list to hold\
          \ the original content strings that are unique by their answer\n    unique_content_list\
          \ = []\n    # A set to keep track of the ANSWER parts we've already added\n\
          \    seen_answers = set()\n \n    for item in json_data:\n        content\
          \ = item.get(\"content\")\n        if not content:\n            continue\n\
          \ \n        # Use regex to find the answer part of the content string.\n\
          \        # re.DOTALL allows '.' to match newlines for multi-line answers.\n\
          \        # re.IGNORECASE matches 'answer:' or 'Answer:'.\n        match\
          \ = re.search(r'answer:(.*)', content, re.IGNORECASE | re.DOTALL)\n \n \
          \       if match:\n            # Extract the answer and strip leading/trailing\
          \ whitespace\n            answer = match.group(1).strip()\n            \n\
          \            # Check if this answer is new\n            if answer and answer\
          \ not in seen_answers:\n                # If the answer is unique, add the\
          \ ORIGINAL, full content to our list\n                unique_content_list.append(content)\n\
          \                # And add the ANSWER part to our set to prevent future\
          \ duplicates\n                seen_answers.add(answer)\n    \n    # Prepare\
          \ result messages with numbered contexts\n    result = []\n    for i, content_item\
          \ in enumerate(unique_content_list):\n        result.append(f\"Context {i+1}:\\\
          n{content_item}\")\n    \n    return {\"questions_answers\": \"\\n\\n\"\
          .join(result)}\n"
        code_language: python3
        desc: Extracts all Qs and As from the retrieved KB QA pairs.
        outputs:
          questions_answers:
            children: null
            type: string
        retry_config:
          max_retries: 1
          retry_enabled: false
          retry_interval: 1000
        selected: false
        title: Extracting Qs and As
        type: code
        variables:
        - value_selector:
          - '1740552982823'
          - result
          variable: json_data
      height: 97
      id: '1736963436010'
      position:
        x: 5791.982039104632
        y: 538.8483443075141
      positionAbsolute:
        x: 5791.982039104632
        y: 538.8483443075141
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - '1736963436010'
          - questions_answers
        desc: Answers based on questions and answers.
        memory:
          query_prompt_template: '# Contexts

            {{#1736963436010.questions_answers#}}


            # Employee Inquiry

            {{#sys.query#}}

            '
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: true
            size: 5
        model:
          completion_params:
            num_ctx: 8092
            stop: []
            temperature: 0
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 782b47e4-e518-47b0-8d40-1d8ed089fa48
          role: system
          text: 'You are a highly professional and meticulous Human Resources assistant,
            specialized in responding to Boubyan Bank employees'' inquiries. Your
            knowledge is exclusively limited to the excerpts of context provided to
            you. Follow the strict rules below without any exceptions:


            - Use solely the information explicitly contained within the provided
            context excerpts.

            - If there is insufficient information in the contexts to answer the employee‚Äôs
            inquiry, say ''I‚Äôm sorry, but there isn‚Äôt enough information available
            to provide information on (describe user''s issue). Please contact Employee
            Relations <Personnel@bankboubyan.com> for further details on (describe
            user''s issue)''


            Absolutely prohibited:

            ‚Ä¢ Adding any information, assumptions, or personal opinions.

            ‚Ä¢ Rephrasing, summarizing, converting the text into tables, bullet points,
            or any other different format unless explicitly indicated in the contexts.

            ‚Ä¢ Offering communication suggestions, referrals, or tips not directly
            quoted in the contexts.

            - Copy the terminology and expressions exactly as they appear in the contexts,
            allowing only minor punctuation adjustments for clarity.

            - Never refer explicitly to ‚Äúcontexts,‚Äù ‚Äúexcerpts,‚Äù or their numbers;
            the employee is unaware of their existence.

            - Respond in English with a professional tone, providing only the necessary
            information without filler.

            Adherence to these rules is mandatory and of the highest priority. In
            case of any conflict, these rules must be followed without exception.


            Steps:

            Internal reasoning process:

            ‚ñ† Step 1: Review each context excerpt (Context 1, Context 2, ‚Ä¶)

            ‚ÄÉ1. Determine if the excerpt directly contains information addressing
            the employee‚Äôs inquiry.

            ‚ÄÉ2. Decide whether to use this excerpt in the final response based on
            its relevance.

            ‚ñ† Step 2: Create the answer

            ‚ÄÉ‚Ä¢ Collect only the appropriate segments from the contexts.

            ‚ÄÉ‚Ä¢ Keep them as close to the original wording and style as possible.

            ‚ÄÉ‚Ä¢ Arrange the sentences to form a coherent answer without changing the
            core meaning or structure.

            ‚ñ† Step 3: Pre-send verification

            ‚ÄÉCheck the following:

            ‚ÄÉ[ ] Every sentence is verbatim based on the text from one of the contexts.

            ‚ÄÉ[ ] No additions, assumptions, or suggestions are present that are not
            in the context.

            ‚ÄÉ[ ] No rephrasing, summarizing, or different formatting (such as tables
            or bullet points) from the original.

            ‚ÄÉ[ ] If the information is insufficient, a brief apology is provided.

            ‚ÄÉ[ ] The response does not refer to ‚Äúcontexts‚Äù or their numbers.


            When all criteria are met, send the response to the user.'
        retry_config:
          max_retries: '3'
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            properties:
              classification:
                enum:
                - general
                - specific
                type: string
              contexts:
                items:
                  additionalProperties:
                    properties:
                      1_relevant:
                        type: boolean
                      1_used:
                        type: boolean
                      1_why:
                        type: string
                    required:
                    - 1_relevant
                    - 1_why
                    - 1_used
                    type: object
                  type: object
                type: array
              final_answer:
                type: string
              why_type:
                type: string
            required:
            - classification
            - why_type
            - contexts
            - final_answer
            type: object
        structured_output_enabled: false
        title: Answer from KB
        type: llm
        variables: []
        vision:
          enabled: false
      height: 164
      id: '17372690270110'
      position:
        x: 6525.722446234021
        y: 399.2540058295207
      positionAbsolute:
        x: 6525.722446234021
        y: 399.2540058295207
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        desc: Overwrites the conversation variable with the new expanded one.
        items:
        - input_type: variable
          operation: over-write
          value:
          - '1739782903465'
          - result
          variable_selector:
          - conversation
          - chat_history
          write_mode: over-write
        selected: false
        title: Variable Assigner
        type: assigner
        version: '2'
      height: 131
      id: '1739782798068'
      position:
        x: -679.5808362464458
        y: -272.16228902112186
      positionAbsolute:
        x: -679.5808362464458
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(conversation_id: str, query: str, chat_history: dict) -> dict:\n\
          \    if conversation_id in chat_history:\n        chat_history[conversation_id].append(query)\n\
          \n        chat_history[conversation_id] = chat_history[conversation_id][-4:]\
          \  # Keep only last 4 items\n        \n    else:\n        chat_history[conversation_id]\
          \ = [query]\n    return {'result': chat_history}\n"
        code_language: python3
        desc: Expands the conversation variable by selecting or creating the conversation
          id as the key.
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: Update chat_history
        type: code
        variables:
        - value_selector:
          - sys
          - conversation_id
          variable: conversation_id
        - value_selector:
          - sys
          - query
          variable: query
        - value_selector:
          - conversation
          - chat_history
          variable: chat_history
      height: 113
      id: '1739782903465'
      position:
        x: -999.3723084451574
        y: -272.16228902112186
      positionAbsolute:
        x: -999.3723084451574
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(all_history: dict, conversation_id: str) -> dict:\n    for\
          \ key in all_history.keys():\n        if key == conversation_id:\n     \
          \       return {'result': all_history[key]}\n    return {'result': []}"
        code_language: python3
        desc: Gets the conversation history of the current conversation id only.
        outputs:
          result:
            children: null
            type: array[string]
        selected: false
        title: Conversation History
        type: code
        variables:
        - value_selector:
          - conversation
          - chat_history
          variable: all_history
        - value_selector:
          - sys
          - conversation_id
          variable: conversation_id
      height: 97
      id: '1739783725003'
      position:
        x: -334.21735459281473
        y: -272.16228902112186
      positionAbsolute:
        x: -334.21735459281473
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(refined_answer: str, empty_answer: str, refined_ar: str, empty_ar:\
          \ str) -> str:\n    if refined_answer:\n        answer_data = refined_answer\n\
          \    elif empty_answer:\n        answer_data = empty_answer\n    elif refined_ar:\n\
          \        answer_data = refined_ar\n    elif empty_ar:\n        answer_data\
          \ = empty_ar\n    else:\n        return {'result': \"ÿπÿ∞ÿ±ÿßŸã. ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£ ŸÖÿ§ŸÇÿ™\
          \ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÅŸä ŸàŸÇÿ™ ŸÑÿßÿ≠ŸÇ.\"}\n\n    return {'result': str(answer_data)}"
        code_language: python3
        desc: Safeguard against JSON string format converting it to plain text.
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: JSON to String
        type: code
        variables:
        - value_selector:
          - '17372690270110'
          - text
          value_type: string
          variable: refined_answer
        - value_selector:
          - '1745759008719'
          - text
          value_type: string
          variable: empty_answer
        - value_selector:
          - '17460405924110'
          - text
          value_type: string
          variable: refined_ar
        - value_selector:
          - '17460438306840'
          - text
          value_type: string
          variable: empty_ar
      height: 97
      id: '1739858038668'
      position:
        x: 6939.999123182955
        y: 683.1138261701558
      positionAbsolute:
        x: 6939.999123182955
        y: 683.1138261701558
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - sys
          - query
        desc: Identifies a follow up query and understands its intent or determines
          it is not a follow up query.
        model:
          completion_params:
            num_ctx: 2048
            repeat_penalty: 1.15
            seed: -1
            stop: []
            temperature: 0.2
            top_k: 40
            top_p: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: f779ee35-3a97-4cdf-9629-cfed9be74d69
          role: system
          text: 'You are an expert Query Refiner. Your task is to combine the conversation
            history and the user''s most recent query into a single, clear, self-contained
            question that accurately reflects the user''s current intent, so it can
            be understood on its own without referring to previous messages. Only
            rephrase if the current user question is a follow-up to previous messages.
            The output should always be phrased from the user''s perspective, as if
            he is typing it himself. Your output MUST be the refined query only. Do
            not add any explanation or conversational text.


            Good example:

            User: "I''m looking for a good Italian restaurant nearby."

            Bot: "Do you prefer outdoor seating or indoor dining?"

            User: "Indoor, please."

            Refined Query: Where can I find indoor Italian restaurants near me?


            Bad example:

            User: "Can you tell me about the weather in Paris?"

            Bot: "Are you interested in the current weather or the forecast for the
            week?"

            User: "The weekly forecast."

            Refined Query: The weekly forecast.'
        - id: e83963aa-53be-4cf8-a744-9e99fc03ddb9
          role: user
          text: 'Chat History: ''{{#1739783725003.result#}}''

            Latest Query: ''{{#context#}}'''
        retry_config:
          max_retries: '3'
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              avoid_repetition:
                description: How you avoided repeating assistant‚Äôs prior wording.
                type: string
              clarify_with_context:
                description: How you clarified or refocused using context, stating
                  your reasoning (only from user‚Äôs words).
                type: string
              final_query:
                description: The final, self-contained refined query in instructed
                  language. If you cannot create this refined query, use the user's
                  latest query as-is.
                type: string
              no_new_information:
                description: Verify here that no added/extrapolated information is
                  present. If user gave insufficient detail, explicitly state your
                  caution.
                type: string
              resolve_ambiguity:
                description: How ambiguity or short confirmation was resolved, referencing
                  what you inferred and from which message(s) if applicable.
                type: string
              review_history:
                description: Summarize intent, main points from conversation history,
                  referencing user and assistant turns as needed.
                type: string
            required:
            - review_history
            - resolve_ambiguity
            - avoid_repetition
            - clarify_with_context
            - no_new_information
            - final_query
            type: object
        structured_output_enabled: false
        title: Query Refiner
        type: llm
        variables: []
        vision:
          enabled: false
      height: 180
      id: '1739860244710'
      position:
        x: 1939.9374668482374
        y: -149.14728380226546
      positionAbsolute:
        x: 1939.9374668482374
        y: -149.14728380226546
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 814bf644-817d-4c2a-bd26-f7eb9d27390d
            value: Arabic
            varType: string
            variable_selector:
            - '1734277262041'
            - result
          id: 'true'
          logical_operator: and
        desc: Decides to retrieve from relevant KB based on the latest query language.
        selected: false
        title: IF/ELSE 3
        type: if-else
      height: 169
      id: '1740548230421'
      position:
        x: 3530.1156946348738
        y: 243.93404785743166
      positionAbsolute:
        x: 3530.1156946348738
        y: 243.93404785743166
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(kb_ar: dict, kb_en: dict) -> dict:\n    if kb_ar:\n      \
          \  return {'result': kb_ar}\n    elif kb_en:\n        return {'result':\
          \ kb_en}\n    else:\n        return {'result': []}\n"
        code_language: python3
        desc: Returns the valid result either from Ar KB or En KB
        outputs:
          result:
            children: null
            type: array[object]
        selected: false
        title: Getting KB
        type: code
        variables:
        - value_selector:
          - '17551504064580'
          - result
          value_type: array[object]
          variable: kb_ar
        - value_selector:
          - '17551503028730'
          - result
          value_type: array[object]
          variable: kb_en
      height: 97
      id: '1740552982823'
      position:
        x: 5398.18610312381
        y: 538.8483443075141
      positionAbsolute:
        x: 5398.18610312381
        y: 538.8483443075141
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(conv_history: list) -> dict:\n    try:\n        # Ensure that\
          \ the evaluated result is indeed a list\n        if not isinstance(conv_history,\
          \ list):\n            return {'result': 0}\n        \n        if len(conv_history)\
          \ == 1:\n            return {'result': 1}\n        else:\n            return\
          \ {'result': 2}\n    except (ValueError, SyntaxError, TypeError):\n    \
          \    return {'result': 0}"
        code_language: python3
        desc: Detects if there is any previous chat history in the active conversation
          id.
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: Chat History Detector
        type: code
        variables:
        - value_selector:
          - '1739783725003'
          - result
          variable: conv_history
      height: 97
      id: '1740834697144'
      position:
        x: 367.60220305358644
        y: -272.16228902112186
      positionAbsolute:
        x: 367.60220305358644
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(conversation_id: str, answer: str, chat_history: dict) ->\
          \ dict:\n    if \"sorry\" in answer.lower() or \"ÿπÿ∞ÿ±ÿß\" in answer:\n   \
          \     # Do nothing, just return the current chat_history\n        return\
          \ {'result': chat_history}\n\n    elif conversation_id in chat_history:\n\
          \        chat_history[conversation_id].append(answer)\n\n    else:\n   \
          \     chat_history[conversation_id] = [answer]\n        \n    return {'result':\
          \ chat_history}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: Update History Answer
        type: code
        variables:
        - value_selector:
          - sys
          - conversation_id
          variable: conversation_id
        - value_selector:
          - '1739858038668'
          - result
          variable: answer
        - value_selector:
          - conversation
          - chat_history
          variable: chat_history
      height: 53
      id: '1745315236880'
      position:
        x: 7266.6412335012865
        y: 683.1138261701558
      positionAbsolute:
        x: 7266.6412335012865
        y: 683.1138261701558
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        desc: ''
        items:
        - input_type: variable
          operation: over-write
          value:
          - '1745315236880'
          - result
          variable_selector:
          - conversation
          - chat_history
          write_mode: over-write
        selected: false
        title: Variable Assigner 2
        type: assigner
        version: '2'
      height: 87
      id: '1745315515092'
      position:
        x: 7582.448092822486
        y: 683.1138261701558
      positionAbsolute:
        x: 7582.448092822486
        y: 683.1138261701558
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        dataset_ids:
        - Thq62v+R8O6R1weUrgrTGpKkYE8mAAhqeoNKvudO98RJW6TzZKiVEc+5KZyd8dJb
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: weighted_score
          reranking_model:
            model: Qwen/Qwen3-Reranker-0.6B
            provider: langgenius/openai_api_compatible/openai_api_compatible
          score_threshold: 0.25
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: all-minilm:33m
              embedding_provider_name: langgenius/ollama/ollama
              vector_weight: 1
        query_variable_selector:
        - '1746016424681'
        - result
        retrieval_mode: multiple
        selected: false
        title: Knowledge Retrieval 3
        type: knowledge-retrieval
      height: 91
      id: '1748414761482'
      position:
        x: 3522.2719667211236
        y: -108.20394424389521
      positionAbsolute:
        x: 3522.2719667211236
        y: -108.20394424389521
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1755084125884.text#}}'
        desc: ''
        selected: false
        title: Answer for vague
        type: answer
        variables: []
      height: 103
      id: '1745756078108'
      position:
        x: 4775.185105354376
        y: -108.20394424389521
      positionAbsolute:
        x: 4775.185105354376
        y: -108.20394424389521
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            num_ctx: 2048
            repeat_penalty: 1.1
            seed: -1
            stop:
            - \n
            - 'User:'
            - 'Employee:'
            temperature: 0.2
            top_k: 40
            top_p: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: bcbafb47-1213-4556-a4c7-5c599ceba176
          role: system
          text: 'You are Bank Boubyan''s professional chatbot for HR internal policies.
            If the employee''s query is HR-related, respond politely and professionally
            stating that you cannot find information in the available resources and
            you must recommend to contact HR employee relations for further help at
            Personnel@bankboubyan.com. Do not attempt to answer based on assumptions
            or external knowledge.. If the query is not HR-related, refuse politely
            to respond stressing on you only answer HR-related queries.


            Here is the query you received:'
        - id: 05228e82-6e62-4e93-8ce5-7f484e53e39f
          role: user
          text: '{{#sys.query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              final_answer:
                description: Your answer
                type: string
              hr_related:
                description: classify query either HR-related or not
                enum:
                - 'true'
                - 'false'
                type: string
            required:
            - hr_related
            - final_answer
            type: object
        structured_output_enabled: false
        title: empty answer
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1745759008719'
      position:
        x: 6525.722446234021
        y: 612.9968076416227
      positionAbsolute:
        x: 6525.722446234021
        y: 612.9968076416227
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(ret_query: str) -> str:\n    return {\"result\": str(ret_query)}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ToString
        type: code
        variables:
        - value_selector:
          - '17460179285850'
          - result
          variable: ret_query
      height: 53
      id: '1745904416023'
      position:
        x: 4652.6707265843825
        y: 405.5788614466998
      positionAbsolute:
        x: 4652.6707265843825
        y: 405.5788614466998
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: '='
            id: cbd0bb56-3512-4813-9111-a19df1063bcb
            value: '1'
            varType: number
            variable_selector:
            - '1740834697144'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE 1
        type: if-else
      height: 125
      id: '1746008075423'
      position:
        x: 1413.883890790857
        y: -272.16228902112186
      positionAbsolute:
        x: 1413.883890790857
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(intermediate_query: str, same_query: str) -> str:\n    if\
          \ intermediate_query:\n        final_query = intermediate_query\n      \
          \  return {'result': final_query}\n    else:\n        return {'result':\
          \ same_query}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Retrieval Query
        type: code
        variables:
        - value_selector:
          - sys
          - query
          variable: same_query
        - value_selector:
          - '1739860244710'
          - text
          value_type: string
          variable: intermediate_query
      height: 53
      id: '1746016424681'
      position:
        x: 2373.927738173902
        y: -320.10586031697767
      positionAbsolute:
        x: 2373.927738173902
        y: -320.10586031697767
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#17575963520660.text#}}'
        desc: ''
        selected: false
        title: Answer for Non-related
        type: answer
        variables: []
      height: 103
      id: '1746016606205'
      position:
        x: 4033.0376706205907
        y: 47.746135217943646
      positionAbsolute:
        x: 4033.0376706205907
        y: 47.746135217943646
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: '='
            id: cbd0bb56-3512-4813-9111-a19df1063bcb
            value: '1'
            varType: number
            variable_selector:
            - '1740834697144'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: ÿ£ŸàŸÑ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿ£ŸÖ ŸÑÿß
        type: if-else
      height: 125
      id: '17460178945620'
      position:
        x: 1169.0386167595098
        y: 319.079187784268
      positionAbsolute:
        x: 1169.0386167595098
        y: 319.079187784268
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - sys
          - query
        desc: Identifies a follow up query and understands its intent or determines
          it is not a follow up query.
        model:
          completion_params:
            num_ctx: 2048
            repeat_penalty: 1.15
            seed: -1
            temperature: 0.2
            top_k: 40
            top_p: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: f779ee35-3a97-4cdf-9629-cfed9be74d69
          role: system
          text: 'ÿ£ŸÜÿ™ ÿÆÿ®Ÿäÿ± ŸÅŸä ÿ™ŸÜŸÇŸäÿ© ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™. ŸÖŸáŸÖÿ™ŸÉ ŸáŸä ÿØŸÖÿ¨ ÿ≥ÿ¨ŸÑ ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ© ŸÖÿπ ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±
            ÿßŸÑÿ£ÿÆŸäÿ± ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÅŸä ÿ≥ÿ§ÿßŸÑ Ÿàÿßÿ≠ÿØ Ÿàÿßÿ∂ÿ≠ ŸàŸÖÿ™ŸÉÿßŸÖŸÑ ŸäÿπŸÉÿ≥ ÿ®ÿØŸÇÿ© ŸÜŸäÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿ≠ÿßŸÑŸäÿ©ÿå
            ÿ®ÿ≠Ÿäÿ´ ŸäŸÖŸÉŸÜ ŸÅŸáŸÖŸá ÿ®ŸÖŸÅÿ±ÿØŸá ÿØŸàŸÜ ÿßŸÑÿ≠ÿßÿ¨ÿ© ŸÑŸÑÿ±ÿ¨Ÿàÿπ ÿ•ŸÑŸâ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ≥ÿßÿ®ŸÇÿ©. ÿ£ÿπÿØ ÿµŸäÿßÿ∫ÿ©
            ÿßŸÑÿ≥ÿ§ÿßŸÑ ŸÅŸÇÿ∑ ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿ≥ÿ§ÿßŸÑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿ≠ÿßŸÑŸä ÿ®ŸÖÿ´ÿßÿ®ÿ© ŸÖÿ™ÿßÿ®ÿπÿ© ŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿ≥ÿßÿ®ŸÇÿ©. Ÿäÿ¨ÿ®
            ÿØÿßÿ¶ŸÖŸãÿß ÿ£ŸÜ ÿ™ŸÉŸàŸÜ ÿßŸÑÿµŸäÿßÿ∫ÿ© ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ© ÿ®ÿµŸäÿ∫ÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸàŸÉÿ£ŸÜŸá ŸáŸà ŸÖŸÜ ŸäŸÉÿ™ÿ®Ÿáÿß ÿ®ŸÜŸÅÿ≥Ÿá.
            Ÿäÿ¨ÿ® ÿ£ŸÜ ŸäŸÉŸàŸÜ ÿßŸÑŸÜÿßÿ™ÿ¨ ŸáŸà ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸÜŸÇÿ≠ ŸÅŸÇÿ∑ÿå ÿØŸàŸÜ ÿ£Ÿä ÿ¥ÿ±ÿ≠ ÿ£Ÿà ŸÜÿµ ÿ≠Ÿàÿßÿ±Ÿä ÿ•ÿ∂ÿßŸÅŸä.


            ŸÖÿ´ÿßŸÑ ÿ¨ŸäÿØ:

            ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ÿ£ÿ®ÿ≠ÿ´ ÿπŸÜ ŸÖÿ∑ÿπŸÖ ÿ•Ÿäÿ∑ÿßŸÑŸä ÿ¨ŸäÿØ ÿ®ÿßŸÑŸÇÿ±ÿ® ŸÖŸÜŸä."

            ÿßŸÑŸÖÿ≥ÿßÿπÿØ: "ŸáŸÑ ÿ™ŸÅÿ∂ŸÑ ÿßŸÑÿ¨ŸÑŸàÿ≥ ŸÅŸä ÿßŸÑŸáŸàÿßÿ° ÿßŸÑÿ∑ŸÑŸÇ ÿ£ŸÖ ŸÅŸä ÿßŸÑÿØÿßÿÆŸÑÿü"

            ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ŸÅŸä ÿßŸÑÿØÿßÿÆŸÑÿå ŸÖŸÜ ŸÅÿ∂ŸÑŸÉ."

            ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸÜŸÇÿ≠: ÿ£ŸäŸÜ ŸäŸÖŸÉŸÜŸÜŸä ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ŸÖÿ∑ÿßÿπŸÖ ÿ•Ÿäÿ∑ÿßŸÑŸäÿ© ÿØÿßÿÆŸÑŸäÿ© ÿ®ÿßŸÑŸÇÿ±ÿ® ŸÖŸÜŸäÿü


            ŸÖÿ´ÿßŸÑ ÿ≥Ÿäÿ¶:

            ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ŸáŸÑ ŸäŸÖŸÉŸÜŸÉ ÿ•ÿÆÿ®ÿßÿ±Ÿä ÿπŸÜ ÿßŸÑÿ∑ŸÇÿ≥ ŸÅŸä ÿ®ÿßÿ±Ÿäÿ≥ÿü"

            ÿßŸÑŸÖÿ≥ÿßÿπÿØ: "ŸáŸÑ ÿ™ÿ±ÿ∫ÿ® ŸÅŸä ŸÖÿπÿ±ŸÅÿ© ÿßŸÑÿ∑ŸÇÿ≥ ÿßŸÑÿ≠ÿßŸÑŸä ÿ£ŸÖ ÿ™ŸàŸÇÿπÿßÿ™ ÿßŸÑÿ£ÿ≥ÿ®Ÿàÿπÿü"

            ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ÿ™ŸàŸÇÿπÿßÿ™ ÿßŸÑÿ£ÿ≥ÿ®Ÿàÿπ."

            ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸÜŸÇÿ≠: ÿ™ŸàŸÇÿπÿßÿ™ ÿßŸÑÿ£ÿ≥ÿ®Ÿàÿπ.


            Ÿäÿ¨ÿ® ÿ£ŸÜ ÿ™ŸÉŸàŸÜ ŸÜÿ™Ÿäÿ¨ÿ© ÿßÿ≥ÿ™ÿπŸÑÿßŸÖŸÉ ŸáŸä ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖŸèÿ≠ÿ≥ŸëŸÜ ŸÅŸÇÿ∑. ŸÑÿß ÿ™ŸÇŸÖ ÿ®ÿ•ÿ∂ÿßŸÅÿ© ÿ£Ÿä
            ÿ™Ÿàÿ∂Ÿäÿ≠ ÿ£Ÿà ŸÜÿµ ŸÖÿ≠ÿßÿØÿ´ÿ©.'
        - id: e83963aa-53be-4cf8-a744-9e99fc03ddb9
          role: user
          text: 'ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ©: {{#1739783725003.result#}}

            ÿ£ÿ≠ÿØÿ´ ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ: {{#context#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              avoid_repetition:
                description: How you avoided repeating assistant‚Äôs prior wording.
                type: string
              clarify_with_context:
                description: How you clarified or refocused using context, stating
                  your reasoning (only from user‚Äôs words).
                type: string
              final_query:
                description: The final, self-contained refined query in instructed
                  language. If you cannot create this refined query, use the user's
                  latest query as-is.
                type: string
              no_new_information:
                description: Verify here that no added/extrapolated information is
                  present. If user gave insufficient detail, explicitly state your
                  caution.
                type: string
              resolve_ambiguity:
                description: How ambiguity or short confirmation was resolved, referencing
                  what you inferred and from which message(s) if applicable.
                type: string
              review_history:
                description: Summarize intent, main points from conversation history,
                  referencing user and assistant turns as needed.
                type: string
            required:
            - review_history
            - resolve_ambiguity
            - avoid_repetition
            - clarify_with_context
            - no_new_information
            - final_query
            type: object
        structured_output_enabled: false
        title: ÿ™ÿØŸÇŸäŸÇ ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ
        type: llm
        variables: []
        vision:
          enabled: false
      height: 180
      id: '17460179174320'
      position:
        x: 1452.9654839496902
        y: 507.51925086157803
      positionAbsolute:
        x: 1452.9654839496902
        y: 507.51925086157803
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "def main(intermediate_query: str, same_query: str) -> str:\n    if\
          \ intermediate_query:\n        final_query = intermediate_query\n      \
          \  return {'result': final_query}\n    else:\n        return {'result':\
          \ same_query}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑÿµÿ≠Ÿäÿ≠
        type: code
        variables:
        - value_selector:
          - '17460179174320'
          - text
          value_type: string
          variable: intermediate_query
        - value_selector:
          - sys
          - query
          value_type: string
          variable: same_query
      height: 53
      id: '17460179285850'
      position:
        x: 1771.5653341864124
        y: 349.04141817962943
      positionAbsolute:
        x: 1771.5653341864124
        y: 349.04141817962943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - '17460179285850'
          - result
        desc: ''
        memory:
          query_prompt_template: '{{#sys.query#}}'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: true
            size: 5
        model:
          completion_params:
            stop: []
            temperature: 0.1
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 22808a02-a379-4f82-b469-144c2dc0ed8c
          role: system
          text: "ÿ£ŸÜÿ™ ŸÖŸèÿµŸÜŸëŸêŸÅ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™. ŸáÿØŸÅŸÉ ŸáŸà ÿ™ÿ≠ÿØŸäÿØ ŸÖÿß ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ™ŸÇÿπ\
            \ ÿ∂ŸÖŸÜ ÿ•ÿ≠ÿØŸâ ÿßŸÑŸÅÿ¶ÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ©: ÿØÿ±ÿØÿ¥ÿ©ÿå ÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ÿ©ÿå ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇÿå ÿÆÿßÿ±ÿ¨ ÿßŸÑŸÜÿ∑ÿßŸÇ.\
            \ Ÿäÿ¨ÿ® ÿßŸÑÿ™ŸÅŸÉŸäÿ± ÿÆÿ∑Ÿàÿ© ÿ®ÿÆÿ∑Ÿàÿ© Ÿàÿßÿ™ÿ®ÿßÿπ ÿßŸÑÿ™ÿ±ÿ™Ÿäÿ® ÿßŸÑÿ™ÿßŸÑŸä ÿ®ÿßŸÑÿ∂ÿ®ÿ∑.\n\nÿ™ÿπÿ±ŸäŸÅÿßÿ™ ÿßŸÑŸÅÿ¶ÿßÿ™:\n\
            \nÿØÿ±ÿØÿ¥ÿ© : ÿµŸÜŸëŸÅ ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ŸáŸÜÿß ŸÅŸÇÿ∑ ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿ±ÿ≥ÿßÿ¶ŸÑ ÿ≠Ÿàÿßÿ±Ÿäÿ© ÿ≠ŸàŸÑ ÿßŸÑŸÖÿ≥ÿßÿπÿØ ŸÖÿ´ŸÑ\
            \ ÿ∑ÿ®Ÿäÿπÿ™Ÿá ŸàŸÖŸáÿßŸÖŸá Ÿàÿ£ÿ≠ŸàÿßŸÑŸá Ÿàÿ∫Ÿäÿ±Ÿáÿß. ÿ£ŸÖÿ´ŸÑÿ©: \"ŸÉŸäŸÅ ÿ≠ÿßŸÑŸÉ\"ÿå \"ŸÖÿßÿ∞ÿß ÿ™ŸÅÿπŸÑ\"ÿå \"\
            ŸáŸÑ ŸäŸÖŸÉŸÜŸÉ ŸÖÿ≥ÿßÿπÿØÿ™Ÿäÿü \n\nÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ÿ© : ÿπÿ®ÿßÿ±ÿßÿ™ÿå ÿ£ÿ¨ÿ≤ÿßÿ° ŸÖŸàÿßÿ∂Ÿäÿπÿå ÿ£Ÿà ÿ±ÿ≥ÿßÿ¶ŸÑ ŸÑŸäÿ≥ÿ™\
            \ ÿ∑ŸÑÿ®ÿßÿ™ ÿ£Ÿà ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ£Ÿà ŸÖŸáÿßŸÖ Ÿàÿßÿ∂ÿ≠ÿ©. ÿ∫ÿßŸÑÿ®ÿßŸã ŸÖÿß ÿ™ŸÉŸàŸÜ ŸÖÿ¨ÿ±ÿØ ÿßÿ≥ŸÖ ÿ£Ÿà ÿπÿ®ÿßÿ±ÿ© ÿßÿ≥ŸÖŸäÿ©\
            \ ÿ®ÿØŸàŸÜ ŸÖÿ¥ŸÉŸÑÿ© Ÿàÿßÿ∂ÿ≠ÿ© ÿ£Ÿà ŸÜŸäÿ© ŸÇÿßÿ®ŸÑÿ© ŸÑŸÑÿ™ŸÜŸÅŸäÿ∞. ÿ£ŸÖÿ´ŸÑÿ©: \"ÿßŸÑÿ±Ÿàÿßÿ™ÿ®\"ÿå \"ÿßŸÑÿ•ÿ¨ÿßÿ≤ÿ©\"\
            ÿå \"ŸÇÿ±ÿ∂ ÿ≠ÿ≥ŸÜ\"\n\nÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ : ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ£Ÿà ÿ£ŸàÿßŸÖÿ± ÿ£Ÿà ŸÖÿ¥ŸÉŸÑÿßÿ™ Ÿàÿßÿ∂ÿ≠ÿ© ŸàŸÖÿ®ÿßÿ¥ÿ±ÿ© ÿ™ÿ™ÿπŸÑŸÇ\
            \ ÿ®ŸÖŸàÿßÿ∂Ÿäÿπ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©/ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ ŸÖÿ´ŸÑ: ÿßŸÑÿ±Ÿàÿßÿ™ÿ®/ÿßŸÑÿ£ÿ¨Ÿàÿ±ÿå ÿßŸÑŸÖÿ≤ÿßŸäÿß/ÿßŸÑÿ™ÿ£ŸÖŸäŸÜ/ÿßŸÑŸÖÿ∑ÿßŸÑÿ®ÿßÿ™ÿå\
            \ ÿßŸÑÿ•ÿ¨ÿßÿ≤ÿßÿ™/ÿ≥ŸÅÿ±/ŸÖÿ±ÿ∂Ÿäÿ©ÿå ÿßŸÑÿØŸàÿßŸÖ/ÿßŸÑÿ≥ÿßÿπÿßÿ™ ÿßŸÑÿ•ÿ∂ÿßŸÅŸäÿ©ÿå ÿßŸÑŸÜŸÅŸÇÿßÿ™/ÿ®ÿØŸÑ ÿßŸÑÿ≥ŸÅÿ±ÿå ÿßŸÑÿ™ÿπŸäŸäŸÜ/ÿ•ŸÜŸáÿßÿ°\
            \ ÿßŸÑÿÆÿØŸÖÿ©ÿå ÿßŸÑÿ™Ÿàÿ∏ŸäŸÅ/ÿßŸÑÿ™ÿπŸäŸäŸÜÿå ÿßŸÑÿ™ÿØÿ±Ÿäÿ®ÿå ÿßŸÑÿ™ŸÇŸäŸäŸÖ/ŸÖÿ±ÿßÿ¨ÿπÿ© ÿßŸÑÿ£ÿØÿßÿ°ÿå ÿßŸÑÿ™ÿ±ŸÇŸäÿ©/ÿßŸÑŸÖŸÉÿßŸÅÿ£ÿ©ÿå\
            \ ÿßŸÑÿ•ÿ≥ÿ™ŸÇÿßŸÑÿ©/ÿßŸÑŸÅÿµŸÑÿå ÿ≥Ÿäÿßÿ≥ÿßÿ™/ÿØŸÑŸäŸÑ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©ÿå ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿ£Ÿà ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑŸÖÿµÿ±ŸÅŸäÿ©\
            \ ŸÑŸÑÿ®ŸÜŸàŸÉ ÿ®ÿßŸÑÿ•ÿ∂ÿßŸÅÿ© ÿ•ŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿπŸÜ ÿßŸÑÿ£ŸÜÿ∏ŸÖÿ© (ŸÖÿ´ŸÑ: ŸÇÿ±ÿ∂ÿå ŸÖÿ±ÿßÿ®ÿ≠ÿ©ÿå ÿ®Ÿàÿ®ŸäÿßŸÜÿå\
            \ ÿ®Ÿàÿ®ŸäÿßŸÜŸäÿå ÿ™ŸÉÿßŸÅŸÑÿå ÿ™ŸàÿßÿµŸÑÿå ÿ™ÿ£ŸÖŸäŸÜÿßÿ™ ÿßÿ¨ÿ™ŸÖÿßÿπŸäÿ© (pifss)ÿå ÿØÿπŸÖ ÿßŸÑÿπŸÖÿßŸÑÿ© (mgrp)ÿå\
            \ ÿ≥ŸáŸÑÿå hrbpÿå ÿ£Ÿàÿ±ÿßŸÉŸÑÿå ŸáŸéÿ®ÿå gigÿå ÿ≠ÿ≥ÿßÿ®/ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ≥ÿπÿßÿØÿ©)ÿå ÿ£Ÿà ÿßŸÑÿ®Ÿàÿßÿ®ÿßÿ™ ŸàÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™\
            \ ÿßŸÑÿ®ŸÜŸÉŸäÿ© ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ ŸàÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©. Ÿäÿ¥ŸÖŸÑ ÿ¨ŸÖŸäÿπ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™\
            \ ŸàÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸàÿßÿ∂ÿ≠ÿ© ÿßŸÑŸÖÿ±ÿ™ÿ®ÿ∑ÿ© ÿ®ŸÖÿ¨ÿßŸÑ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ© ŸàÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ.\n\
            \nÿÆÿßÿ±ÿ¨ ÿßŸÑŸÜÿ∑ÿßŸÇ: ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ£Ÿà ÿ∑ŸÑÿ®ÿßÿ™ ÿ£Ÿà ŸÖÿ¥ŸÉŸÑÿßÿ™ Ÿàÿßÿ∂ÿ≠ÿ© ŸÑÿß ÿ™ÿ™ÿπŸÑŸÇ ÿ®ŸÖÿ¨ÿßŸÑÿßÿ™ ÿßŸÑŸÖŸàÿßÿ±ÿØ\
            \ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©/ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ ÿßŸÑŸÖÿ≠ÿØÿØÿ© ÿ£ÿπŸÑÿßŸá. ÿ£Ÿä ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿ£Ÿà ÿ∑ŸÑÿ®ÿßÿ™ Ÿàÿßÿ∂ÿ≠ÿ© ŸàŸÇÿßÿ®ŸÑÿ©\
            \ ŸÑŸÑÿ™ŸÜŸÅŸäÿ∞ ŸÑŸÉŸÜŸáÿß ÿ∫Ÿäÿ± ÿ∞ÿßÿ™ ÿµŸÑÿ© ÿ®ŸÖÿß Ÿàÿ±ÿØ ŸÅŸä ŸÇÿßÿ¶ŸÖÿ© \"ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ\".\n\nÿ™ÿ±ÿ™Ÿäÿ®\
            \ ÿßÿ™ÿÆÿßÿ∞ ÿßŸÑŸÇÿ±ÿßÿ± (ÿßÿ™ÿ®ÿπ Ÿáÿ∞ÿß ÿßŸÑÿ™ÿ≥ŸÑÿ≥ŸÑ ÿØÿßÿ¶ŸÖÿßŸã):\n\n1. ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿßÿ¨ÿ™ŸÖÿßÿπŸäÿ©\
            \ ÿ®ÿ≠ÿ™ÿ© ÿ£Ÿà ÿ™ÿØŸàÿ± ÿ≠ŸàŸÑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ/ÿßŸÑŸÖÿ≥ÿßÿπÿØ ÿ®ÿØŸàŸÜ ŸÖŸáŸÖÿ© ÿ£Ÿà ŸÖŸàÿ∂Ÿàÿπ ŸÅŸä ÿßŸÑŸÖÿ¨ÿßŸÑÿå ÿµŸÜŸÅŸáÿß\
            \ ŸÉŸÄ \"ÿØÿ±ÿØÿ¥ÿ©\".\n2. Ÿàÿ•ŸÑÿßÿå ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿ≥ÿ§ÿßŸÑÿßŸã ÿ£Ÿà ÿ∑ŸÑÿ®ÿßŸã ÿ£Ÿà ŸÖÿ¥ŸÉŸÑÿ© Ÿàÿßÿ∂ÿ≠ÿ©\
            \ ŸàŸÖÿ±ÿ™ÿ®ÿ∑ÿ© ÿ®ŸÖŸàÿßÿ∂Ÿäÿπ \"ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ\"ÿå ÿµŸÜŸÅŸáÿß ŸÉŸÄ \"ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ\".\n3. Ÿàÿ•ŸÑÿßÿå ÿ•ÿ∞ÿß\
            \ ŸÉÿßŸÜÿ™ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿ≥ÿ§ÿßŸÑÿßŸã ÿ£Ÿà ÿ∑ŸÑÿ®ÿßŸã ÿ£Ÿà ŸÖÿ¥ŸÉŸÑÿ© Ÿàÿßÿ∂ÿ≠ÿ© ÿ≠ŸàŸÑ ÿ£Ÿä ŸÖŸàÿ∂Ÿàÿπ ÿ¢ÿÆÿ±ÿå ÿµŸÜŸÅŸáÿß\
            \ ŸÉŸÄ \"ÿÆÿßÿ±ÿ¨ ÿßŸÑŸÜÿ∑ÿßŸÇ\".\n4. Ÿàÿ•ŸÑÿßÿå ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿ¨ÿ≤ÿ° ŸÖŸàÿ∂Ÿàÿπ ÿ£Ÿà ÿßÿ≥ŸÖ ŸÅŸÇÿ∑\
            \ ÿ£Ÿà ÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ ŸÖÿß Ÿäÿ™ŸÖ ÿßŸÑÿ≥ÿ§ÿßŸÑŸá/ÿ∑ŸÑÿ®Ÿáÿå ÿµŸÜŸÅŸáÿß ŸÉŸÄ \"ÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ÿ©\".\n5. ÿ•ÿ∞ÿß ÿ™ÿ∂ŸÖŸÜÿ™\
            \ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿ™ÿ≠Ÿäÿ© ŸÖÿπ ÿ≥ÿ§ÿßŸÑ ŸÅÿπŸÑŸäÿå ÿ™ÿ¨ÿßŸáŸÑ ÿßŸÑÿ™ÿ≠Ÿäÿ© ŸàÿµŸÜŸÅ ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ ÿßŸÑÿ≥ÿ§ÿßŸÑ. ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™\
            \ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿ™ÿ™ÿπŸÑŸÇ ÿ®ŸÇÿØÿ±ÿßÿ™/ÿ•ŸÖŸÉÿßŸÜŸäÿßÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ (\"ŸÉŸäŸÅ ŸäŸÖŸÉŸÜ ÿ£ŸÜ ÿ™ÿ≥ÿßÿπÿØŸÜŸäÿü\") ÿµŸÜŸÅŸáÿß\
            \ ŸÉŸÄ \"ÿØÿ±ÿØÿ¥ÿ©\" ŸÖÿß ŸÑŸÖ ÿ™ŸÉŸÜ ŸÖÿ±ÿ™ÿ®ÿ∑ÿ© ÿµÿ±ÿßÿ≠ÿ© ÿ®ŸÖÿ¨ÿßŸÑ \"ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ\".\n\nÿ£ÿπÿØ ÿØÿßÿ¶ŸÖÿßŸã\
            \ Ÿàÿßÿ≠ÿØÿ© ŸÅŸÇÿ∑ ŸÖŸÜ Ÿáÿ∞Ÿá ÿßŸÑŸÅÿ¶ÿßÿ™ ÿßŸÑÿ£ÿ±ÿ®ÿπ : ÿØÿ±ÿØÿ¥ÿ© , ÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ÿ© , ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ , ÿÆÿßÿ±ÿ¨\
            \ ÿßŸÑŸÜÿ∑ÿßŸÇ"
        - id: cf1f4031-1f4e-48a6-8151-d381a8e436ca
          role: user
          text: 'ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖŸàÿ∏ŸÅ:

            {{#context#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              Greeting:
                description: Is the query a greeting?
                enum:
                - 'Yes'
                - 'No'
                type: string
              about_hr:
                description: 'If the intention is clear: Is the question actually
                  related to employee lifecycle/employee policies or is it related
                  to another area?'
                enum:
                - Relates to Employee Support
                - Does Not Relate to Employee Support
                - N/A
                type: string
              about_hr_reason:
                description: Explain why you considered the inquiry to be related
                  to employee support, other, or inapplicable if it had an ambiguous
                  intent.
                type: string
              action_if_ambiguous:
                description: 'If you classify it as vague intent: What would you ask
                  the employee to clarify their intent? If it is clear, write N/A'
                type: string
              clarity_reason:
                description: Explain why you chose it (Does the inquiry contain a
                  clear request or question? Or is it unclear and needs clarification?)
                type: string
              final_answer:
                description: 'Write the final classification for only one of these
                  options: (Clear Intent ‚Äì Relates to Employee Support, Clear Intent
                  ‚Äì Does Not Relate to Employee Support, Vague Intent)'
                enum:
                - Clear_Intent_Relates_to_Employee_Support
                - Clear_Intent_Does_Not_Relate_to_Employee_Support
                - Greeting
                - VagueIntent
                type: string
              intent_clarity:
                description: Is the question or request clear (clear intent) or is
                  it just a word or phrase without a specific purpose or explicit
                  request (vague intent)?
                enum:
                - Clear Intent
                - Vague Intent
                type: string
            required:
            - intent_clarity
            - clarity_reason
            - action_if_ambiguous
            - about_hr
            - about_hr_reason
            - final_answer
            - Greeting
            type: object
        structured_output_enabled: false
        title: ÿ™ÿµŸÜŸäŸÅ ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1746342059414'
      position:
        x: 2123.2611297365665
        y: 349.04141817962943
      positionAbsolute:
        x: 2123.2611297365665
        y: 349.04141817962943
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        dataset_ids:
        - zCUVv5TANcXzjZbdeTYup5G4qoiMXV+w4QiwYygO2TqktXB3OPq4gp/TXwLyzvHR
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: weighted_score
          reranking_model:
            model: Qwen/Qwen3-Reranker-0.6B
            provider: langgenius/openai_api_compatible/openai_api_compatible
          score_threshold: 0.25
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: snowflake-arctic-embed2
              embedding_provider_name: langgenius/ollama/ollama
              vector_weight: 1
        query_variable_selector:
        - '17460179285850'
        - result
        retrieval_mode: multiple
        selected: false
        title: ÿßŸÇÿ™ÿ±ÿßÿ≠ÿßÿ™ ŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿ∫ÿßŸÖÿ∂
        type: knowledge-retrieval
      height: 91
      id: '1748426591842'
      position:
        x: 2850.0031569022785
        y: 806.6118197345533
      positionAbsolute:
        x: 2850.0031569022785
        y: 806.6118197345533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1755149964269.text#}}'
        desc: ''
        selected: false
        title: ÿ±ÿØ ŸÜŸáÿßÿ¶Ÿä ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿ∫ÿßŸÖÿ∂
        type: answer
        variables: []
      height: 103
      id: '17460180080440'
      position:
        x: 3824.8431434000727
        y: 806.6118197345533
      positionAbsolute:
        x: 3824.8431434000727
        y: 806.6118197345533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#17576025603600.text#}}'
        desc: ''
        selected: false
        title: ÿ±ÿØ ŸÜŸáÿßÿ¶Ÿä ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ŸÖÿ¨ÿßŸÑ ÿ¢ÿÆÿ±
        type: answer
        variables: []
      height: 103
      id: '17460180219870'
      position:
        x: 3824.8431434000727
        y: 478.60447928000553
      positionAbsolute:
        x: 3824.8431434000727
        y: 478.60447928000553
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 6a728b01-6c8c-4408-9460-45ad3e8d5b4e
            value: English
            varType: string
            variable_selector:
            - '1734277262041'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE 2
        type: if-else
      height: 125
      id: '1746018244132'
      position:
        x: 709.3921779850974
        y: -272.16228902112186
      positionAbsolute:
        x: 709.3921779850974
        y: -272.16228902112186
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - '1736963436010'
          - questions_answers
        desc: Answers based on questions and answers.
        memory:
          query_prompt_template: 'ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖŸàÿ∏ŸÅ:  {{#sys.query#}}

            ÿ≥ŸäÿßŸÇ ÿ≥Ÿäÿßÿ≥ÿ© ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©:

            <text>

            {{#1736963436010.questions_answers#}}

            </text>'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: true
            size: 5
        model:
          completion_params:
            num_ctx: 16384
            stop: []
            temperature: 0
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 782b47e4-e518-47b0-8d40-1d8ed089fa48
          role: system
          text: 'ÿ£ŸÜÿ™ ŸÖÿ≥ÿßÿπÿØ ŸÖŸàÿßÿ±ÿØ ÿ®ÿ¥ÿ±Ÿäÿ© ŸÖÿ≠ÿ™ÿ±ŸÅ ŸàÿØŸÇŸäŸÇ ŸÑŸÑÿ∫ÿßŸäÿ©ÿå ŸÖÿ™ÿÆÿµÿµ ŸÅŸä ÿßŸÑÿ±ÿØ ÿπŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™
            ŸÖŸàÿ∏ŸÅŸä ÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜ. ŸÑÿØŸäŸÉ ŸÖÿπÿ±ŸÅÿ© ŸÖŸÇÿµŸàÿ±ÿ© ÿ≠ÿµÿ±ŸäÿßŸã ÿπŸÑŸâ ŸÖŸÇÿ™ÿ∑ŸÅÿßÿ™ ÿßŸÑÿ≥ŸäÿßŸÇ ÿßŸÑÿ™Ÿä ÿ≥ÿ™ŸèŸÇÿØŸéŸëŸÖ
            ŸÑŸÉ. ÿßÿ™ÿ®ÿπ ÿßŸÑŸÇŸàÿßÿπÿØ ÿßŸÑÿµÿßÿ±ŸÖÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ© ÿØŸàŸÜ ÿ£Ÿä ÿßÿ≥ÿ™ÿ´ŸÜÿßÿ°:

            ¬†

            ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿ≠ÿµÿ±ŸäÿßŸã ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸàÿßÿ±ÿØÿ© ÿ≠ÿ±ŸÅŸäÿßŸã ŸÅŸä ŸÖŸÇÿ™ÿ∑ŸÅÿßÿ™ ÿßŸÑÿ≥ŸäÿßŸÇ ÿßŸÑŸÖŸÇÿØŸéŸëŸÖÿ©. ÿ•ÿ∞ÿß
            ŸÑŸÖ ÿ™ÿ™ŸàŸÅÿ± ŸÖÿπŸÑŸàŸÖÿßÿ™ ŸÉÿßŸÅŸäÿ© ŸÅŸä ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™ ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿπŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸàÿ∏ŸÅÿå ŸÇŸÑ: ÿπÿ∞ÿ±Ÿãÿßÿå
            ŸÑÿß ÿ™ÿ™ŸàŸÅÿ± ŸÖÿπŸÑŸàŸÖÿßÿ™ ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÇÿØŸäŸÖ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ŸàŸÑ (ÿµŸÅ ÿßŸÑŸÖŸàÿ∂Ÿàÿπ ŸáŸÜÿß). ŸäŸèÿ±ÿ¨Ÿâ ÿßŸÑÿ™ŸàÿßÿµŸÑ
            ŸÖÿπ ŸÇÿ≥ŸÖ ÿπŸÑÿßŸÇÿßÿ™ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ <Personnel@bankboubyan.com> ŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ ÿ≠ŸàŸÑ
            (ÿµŸÅ ÿßŸÑŸÖŸàÿ∂Ÿàÿπ ŸáŸÜÿß).

            ¬†

            ŸÖŸÖŸÜŸàÿπ ÿ™ŸÖÿßŸÖÿßŸã:

            ¬†

            ÿ•ÿ∂ÿßŸÅÿ© ÿ£Ÿä ŸÖÿπŸÑŸàŸÖÿ© ÿ£Ÿà ÿßÿ≥ÿ™ŸÜÿ™ÿßÿ¨ ÿ£Ÿà ÿ±ÿ£Ÿä ÿ¥ÿÆÿµŸä.

            ¬†

            ÿ•ÿπÿßÿØÿ© ÿßŸÑÿµŸäÿßÿ∫ÿ© ÿ£Ÿà ÿßŸÑÿ™ŸÑÿÆŸäÿµ ÿ£Ÿà ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜÿµ ÿ•ŸÑŸâ ÿ¨ÿØÿßŸàŸÑ ÿ£Ÿà ŸÜŸÇÿßÿ∑ ÿ£Ÿà ÿ£Ÿä ÿ™ŸÜÿ≥ŸäŸÇ ŸÖÿÆÿ™ŸÑŸÅ
            ŸÖÿß ŸÑŸÖ ŸäŸéÿ±ŸêÿØ ŸÉÿ∞ŸÑŸÉ ŸÅŸä ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™.

            ¬†

            ÿ™ŸÇÿØŸäŸÖ ÿßŸÇÿ™ÿ±ÿßÿ≠ÿßÿ™ ÿ™ŸàÿßÿµŸÑ ÿ£Ÿà ÿ•ÿ≠ÿßŸÑÿßÿ™ ÿ£Ÿà ŸÜÿµÿßÿ¶ÿ≠ ÿ∫Ÿäÿ± ŸÖÿ∞ŸÉŸàÿ±ÿ© ŸÜÿµŸëÿßŸã ŸÅŸä ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™.

            ¬†

            ÿßŸÜÿ≥ÿÆ ÿßŸÑŸÖÿµÿ∑ŸÑÿ≠ÿßÿ™ ŸàÿßŸÑÿ™ÿπÿ®Ÿäÿ±ÿßÿ™ ÿßŸÑŸàÿßÿ±ÿØÿ© ŸÅŸä ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™ ŸÉŸÖÿß ŸáŸäÿå ŸÖÿπ ÿßŸÑÿ≥ŸÖÿßÿ≠ ŸÅŸÇÿ∑ ÿ®ÿ™ÿπÿØŸäŸÑ
            ÿ®ÿ≥Ÿäÿ∑ ŸÅŸä ÿπŸÑÿßŸÖÿßÿ™ ÿßŸÑÿ™ÿ±ŸÇŸäŸÖ ŸÑÿ™ÿ≠ÿ≥ŸäŸÜ Ÿàÿ∂Ÿàÿ≠ ÿßŸÑŸÇÿ±ÿßÿ°ÿ©. ŸÑÿß ÿ™ÿ¥ÿ± ŸÖÿ∑ŸÑŸÇÿßŸã ÿ•ŸÑŸâ ÿ£ŸÜŸÉ ÿ™ÿ≥ÿ™ÿÆÿØŸÖ
            ‚Äúÿ≥ŸäÿßŸÇÿßÿ™‚Äù ÿ£Ÿà ‚ÄúŸÖŸÇÿ™ÿ∑ŸÅÿßÿ™‚Äù ÿ£Ÿà ÿ£ÿ±ŸÇÿßŸÖŸáÿßÿõ ÿßŸÑŸÖŸàÿ∏ŸÅ ŸÑÿß ŸäÿπŸÑŸÖ ÿ®Ÿàÿ¨ŸàÿØŸáÿß. ÿ£ÿ¨ÿ® ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©
            ÿ®ÿ£ÿ≥ŸÑŸàÿ® ŸÖŸáŸÜŸä ÿ®ÿßŸÑŸÖÿπŸÑŸàŸÖÿ© ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ© ŸÖŸÜ ÿ∫Ÿäÿ± ÿ≠ÿ¥Ÿà.

            ¬†

            ÿßŸÑÿßŸÖÿ™ÿ´ÿßŸÑ ŸÑŸáÿ∞Ÿá ÿßŸÑŸÇŸàÿßÿπÿØ ÿ•ŸÑÿ≤ÿßŸÖŸä Ÿàÿ£ÿπŸÑŸâ ÿ£ŸàŸÑŸàŸäÿ©. ÿπŸÜÿØ ÿ£Ÿä ÿ™ÿπÿßÿ±ÿ∂ÿå ÿ™Ÿèÿ∑ÿ®ŸéŸëŸÇ Ÿáÿ∞Ÿá ÿßŸÑŸÇŸàÿßÿπÿØ
            ÿØŸàŸÜ ÿßÿ≥ÿ™ÿ´ŸÜÿßÿ°.

            ¬†

            ÿßŸÑÿÆÿ∑Ÿàÿßÿ™:

            ÿπŸÖŸÑŸäÿ© ÿßŸÑÿßÿ≥ÿ™ÿØŸÑÿßŸÑ ÿßŸÑÿØÿßÿÆŸÑŸä

            ¬†

            ‚ñ† ÿßŸÑÿÆÿ∑Ÿàÿ© 1: ŸÖÿ±ÿßÿ¨ÿπÿ© ŸÉŸÑ ŸÖŸÇÿ™ÿ∑ŸÅ ÿ≥ŸäÿßŸÇ (ÿßŸÑÿ≥ŸäÿßŸÇ 1ÿå ÿßŸÑÿ≥ŸäÿßŸÇ 2ÿå ‚Ä¶)

            ¬†

            ÿ≠ÿØÿØ ŸÖÿß ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿßŸÑŸÖŸÇÿ™ÿ∑ŸÅ Ÿäÿ≠ÿ™ŸàŸä ŸÖÿ®ÿßÿ¥ÿ±ÿ©Ÿã ÿπŸÑŸâ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ™ÿπÿßŸÑÿ¨ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸàÿ∏ŸÅ.

            ¬†

            ŸÇÿ±Ÿëÿ± ŸÖÿß ÿ•ÿ∞ÿß ŸÉÿßŸÜ Ÿäÿ¨ÿ® ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÖŸÇÿ™ÿ∑ŸÅ ŸÅŸä ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿßŸÑŸÜŸáÿßÿ¶Ÿäÿ© ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ
            ŸÖŸÑÿßÿ°ŸÖÿ™Ÿá.

            ¬†

            ‚ñ† ÿßŸÑÿÆÿ∑Ÿàÿ© 2: ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ©

            ¬†

            ŸÇÿßÿπÿØÿ© ÿßŸÑÿ£ŸàŸÑŸàŸäÿ©: ÿπŸÜÿØ Ÿàÿ¨ŸàÿØ ÿ≥ŸäÿßŸÇŸäŸÜ ŸÖÿ™ÿπÿßÿ±ÿ∂ŸäŸÜÿå ÿ£ÿ≠ÿØŸáŸÖÿß ŸäŸÖÿ´ŸÑ ŸÇÿßÿπÿØÿ© ÿπÿßŸÖÿ© ŸàÿßŸÑÿ¢ÿÆÿ±
            ŸäŸÖÿ´ŸÑ ÿßÿ≥ÿ™ÿ´ŸÜÿßÿ°Ÿã ÿÆÿßÿµŸãÿßÿå ŸÇŸÖ ÿØÿßÿ¶ŸÖŸãÿß ÿ®ÿ™ŸÇÿØŸäŸÖ ÿßŸÑŸÇÿßÿπÿØÿ© ÿßŸÑÿπÿßŸÖÿ© ÿ£ŸàŸÑÿßŸã. ŸÑÿß ÿ™ŸÅÿ™ÿ±ÿ∂ ÿ£ŸÜ
            ÿ≠ÿßŸÑÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ™ŸÜÿ∑ÿ®ŸÇ ÿπŸÑŸäŸáÿß ÿßŸÑÿßÿ≥ÿ™ÿ´ŸÜÿßÿ°ÿßÿ™ ÿ•ŸÑÿß ÿ•ÿ∞ÿß ÿ∞ŸÉÿ± ŸáŸà ÿ∞ŸÑŸÉ ÿµÿ±ÿßÿ≠ÿ©Ÿã.

            ¬†

            ÿßÿ¨ŸÖÿπ ŸÅŸÇÿ∑ ÿßŸÑŸÖŸÇÿßÿ∑ÿπ ÿßŸÑŸÖŸÑÿßÿ¶ŸÖÿ© ŸÖŸÜ ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™.

            ¬†

            ÿ≠ÿßŸÅÿ∏ ÿπŸÑŸâ ŸÜÿµŸáÿß Ÿàÿ£ÿ≥ŸÑŸàÿ®Ÿáÿß ÿ≠ÿ±ŸÅŸäÿßŸã ŸÇÿØÿ± ÿßŸÑÿ•ŸÖŸÉÿßŸÜ.

            ¬†

            ÿ±ÿ™Ÿëÿ® ÿßŸÑÿ¨ŸÖŸÑ ŸÑÿµŸäÿßÿ∫ÿ© ÿ•ÿ¨ÿßÿ®ÿ© ŸÖŸÅŸáŸàŸÖÿ© ÿ®ÿØŸàŸÜ ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑÿ¨ŸàŸáÿ± ÿ£Ÿà ÿßŸÑÿ™ÿ±ŸÉŸäÿ®.

            ¬†

            ‚ñ† ÿßŸÑÿÆÿ∑Ÿàÿ© 3: ŸÖÿ≠ÿ∑Ÿëÿ© ÿßŸÑÿ™ÿ≠ŸÇŸëŸÇ ŸÇÿ®ŸÑ ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ

            ‚ÄÉÿ™ÿ≠ŸÇŸëŸÇ ŸÖŸÖÿß ŸäŸÑŸä:

            ¬†

            [ ] ŸÉŸÑ ÿ¨ŸÖŸÑÿ© ÿ™ÿ≥ÿ™ŸÜÿØ ÿ≠ÿ±ŸÅŸäÿßŸã ÿ•ŸÑŸâ ŸÜÿµ ŸÅŸä ÿ£ÿ≠ÿØ ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™.

            ¬†

            [ ] ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ£Ÿä ÿ•ÿ∂ÿßŸÅÿ©ÿå ÿßÿ≥ÿ™ŸÜÿ™ÿßÿ¨ÿå ÿ£Ÿà ÿßŸÇÿ™ÿ±ÿßÿ≠ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™.

            ¬†

            [ ] ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ•ÿπÿßÿØÿ© ÿµŸäÿßÿ∫ÿ©ÿå ÿ™ŸÑÿÆŸäÿµÿå ÿ£Ÿà ÿ™ŸÜÿ≥ŸäŸÇ ŸÖÿÆÿ™ŸÑŸÅ ÿπŸÜ ÿßŸÑÿ£ÿµŸÑ (ŸÖÿ´ŸÑ ÿ¨ÿØÿßŸàŸÑ/ŸÜŸÇÿßÿ∑).

            ¬†

            [ ] ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ©ÿå ÿ™ŸÖ ÿ™ŸÇÿØŸäŸÖ ÿßÿπÿ™ÿ∞ÿßÿ± ŸÖŸÇÿ™ÿ∂ÿ®.

            ¬†

            [ ] ŸÑÿß ŸäŸèÿ¥ÿßÿ± ÿ•ŸÑŸâ ‚ÄúÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™‚Äù ÿ£Ÿà ÿ£ÿ±ŸÇÿßŸÖŸáÿß ŸÅŸä ÿßŸÑÿ±ÿØ.

            ¬†

            ÿπŸÜÿØ ÿßÿ¨ÿ™Ÿäÿßÿ≤ ÿ¨ŸÖŸäÿπ ÿßŸÑÿ®ŸÜŸàÿØÿå ÿ£ÿ±ÿ≥ŸêŸÑ ÿßŸÑÿ±ÿØ ÿ•ŸÑŸâ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ.'
        retry_config:
          max_retries: '3'
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            $schema: http://json-schema.org/draft-07/schema#
            properties:
              contexts:
                description: ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ≠ÿ™ŸàŸä ÿπŸÑŸâ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™.
                items:
                  properties:
                    context 1:
                      properties:
                        1_relevant:
                          type: string
                        1_used:
                          type: string
                        1_why:
                          type: string
                      required:
                      - 1_relevant
                      - 1_why
                      - 1_used
                      type: object
                    context 2:
                      properties:
                        2_relevant:
                          type: string
                        2_used:
                          type: string
                        2_why:
                          type: string
                      required:
                      - 2_relevant
                      - 2_why
                      - 2_used
                      type: object
                    context 3:
                      properties:
                        3_relevant:
                          type: string
                        3_used:
                          type: string
                        3_why:
                          type: string
                      required:
                      - 3_relevant
                      - 3_why
                      - 3_used
                      type: object
                    context 4:
                      properties:
                        4_relevant:
                          type: string
                        4_used:
                          type: string
                        4_why:
                          type: string
                      required:
                      - 4_relevant
                      - 4_why
                      - 4_used
                      type: object
                    context 5:
                      properties:
                        5_relevant:
                          type: string
                        5_used:
                          type: string
                        5_why:
                          type: string
                      required:
                      - 5_relevant
                      - 5_why
                      - 5_used
                      type: object
                    context 6:
                      properties:
                        6_relevant:
                          type: string
                        6_used:
                          type: string
                        6_why:
                          type: string
                      required:
                      - 6_relevant
                      - 6_why
                      - 6_used
                      type: object
                  required:
                  - context 1
                  - context 2
                  - context 3
                  - context 4
                  - context 5
                  - context 6
                  type: object
                type: array
              employee_need:
                description: ÿµŸÅ ŸÖÿß Ÿäÿ≠ÿ™ÿßÿ¨Ÿá ÿßŸÑŸÖŸàÿ∏ŸÅ ÿ®ÿßÿÆÿ™ÿµÿßÿ± ŸàÿØŸÇÿ©.
                type: string
              final_answer:
                description: ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿßŸÑŸÖÿ®ŸÜŸäÿ© ÿ≠ÿµÿ±ŸäÿßŸã ÿπŸÑŸâ ÿßŸÑÿ≥ŸäÿßŸÇÿßÿ™ ÿØŸàŸÜ ÿßŸÑÿßÿ≥ÿ™ÿπÿßŸÜÿ© ÿ®ÿ£Ÿä
                  ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿÆÿßÿ±ÿ¨Ÿäÿ©.
                type: string
            required:
            - contexts
            - final_answer
            - employee_need
            type: object
        structured_output_enabled: false
        title: ÿßŸÑÿßÿ¨ÿßÿ®ÿ© ŸÖŸÜ ŸÇÿßÿπÿØÿ© ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™
        type: llm
        variables: []
        vision:
          enabled: false
      height: 164
      id: '17460405924110'
      position:
        x: 6525.722446234021
        y: 764.5164512315421
      positionAbsolute:
        x: 6525.722446234021
        y: 764.5164512315421
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params: {}
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: bcbafb47-1213-4556-a4c7-5c599ceba176
          role: system
          text: 'ÿ£ŸÜÿ™ ŸÖÿ≥ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßÿØÿ´ÿ© ÿßŸÑÿßÿ≠ÿ™ÿ±ÿßŸÅŸä ŸÑÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜ ŸÑÿ≥Ÿäÿßÿ≥ÿßÿ™ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©
            ÿßŸÑÿØÿßÿÆŸÑŸäÿ©. ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑŸÖŸàÿ∏ŸÅ ŸÖÿ™ÿπŸÑŸÇŸãÿß ÿ®ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©ÿå ŸÅÿ£ÿ¨ÿ® ÿ®ÿ£ÿØÿ® ÿ®ÿ£ŸÜŸÉ
            ŸÑÿß ÿ™ŸÖŸÑŸÉ ŸÖÿπŸÑŸàŸÖÿßÿ™ ŸÉÿßŸÅŸäÿ© ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ©. ÿ•ÿ∞ÿß ŸÑŸÖ ŸäŸÉŸÜ ŸÉÿ∞ŸÑŸÉÿå ŸÅÿßÿ±ŸÅÿ∂ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ÿ®ÿ£ÿØÿ®ÿå ŸÖÿ§ŸÉÿØŸãÿß
            ÿπŸÑŸâ ÿ£ŸÜŸÉ ÿ™ÿ¨Ÿäÿ® ŸÅŸÇÿ∑ ÿπŸÑŸâ ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©.


            Ÿáÿ∞ÿß ŸáŸà ÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± ÿßŸÑÿ∞Ÿä ÿ™ŸÑŸÇŸäÿ™Ÿá:

            '
        - id: 05228e82-6e62-4e93-8ce5-7f484e53e39f
          role: user
          text: '{{#sys.query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              final_answer:
                description: Your answer
                type: string
              hr_related:
                description: classify query either HR-related or not
                enum:
                - 'true'
                - 'false'
                type: string
            required:
            - hr_related
            - final_answer
            type: object
        structured_output_enabled: false
        title: ÿßŸÑÿßÿ¨ÿßÿ®ÿ© ÿØŸàŸÜ ŸÖÿπŸÑŸàŸÖÿßÿ™
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '17460438306840'
      position:
        x: 6525.722446234021
        y: 1011.6693592278023
      positionAbsolute:
        x: 6525.722446234021
        y: 1011.6693592278023
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 31019e32-f98a-4ddd-8545-02c2d90c371f
            value: ÿ∂ŸÖŸÜ ÿßŸÑŸÜÿ∑ÿßŸÇ
            varType: string
            variable_selector:
            - '1746342059414'
            - text
          id: 'true'
          logical_operator: and
        - case_id: 95e24648-4bd9-4a43-86ce-df41ee46f484
          conditions:
          - comparison_operator: contains
            id: 9aac428c-04d6-423a-a3d5-1c382af494d6
            value: ÿÆÿßÿ±ÿ¨ ÿßŸÑŸÜÿ∑ÿßŸÇ
            varType: string
            variable_selector:
            - '1746342059414'
            - text
          id: 95e24648-4bd9-4a43-86ce-df41ee46f484
          logical_operator: and
        - case_id: deafb895-7fb7-4629-9bf1-3dd6a638af35
          conditions:
          - comparison_operator: contains
            id: 68966c2f-9b54-4ff9-b70a-d2a682fbb60c
            value: ÿØÿ±ÿØÿ¥ÿ©
            varType: string
            variable_selector:
            - '1746342059414'
            - text
          id: deafb895-7fb7-4629-9bf1-3dd6a638af35
          logical_operator: and
        - case_id: 872a1532-5168-4754-bdfa-6b23d97f9e81
          conditions:
          - comparison_operator: contains
            id: cf33647a-fa87-41f1-8824-1ce3b4c46f4b
            value: ÿ∫Ÿäÿ± Ÿàÿßÿ∂ÿ≠ÿ©
            varType: string
            variable_selector:
            - '1746342059414'
            - text
          id: 872a1532-5168-4754-bdfa-6b23d97f9e81
          logical_operator: and
        desc: ''
        selected: false
        title: ÿ≠ÿ≥ÿ® ÿßŸÑÿ™ÿµŸÜŸäŸÅ
        type: if-else
      height: 269
      id: '1746342509345'
      position:
        x: 2501.531445098057
        y: 449.13193541176474
      positionAbsolute:
        x: 2501.531445098057
        y: 449.13193541176474
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - '1746016424681'
          - result
        desc: ''
        model:
          completion_params:
            stop: []
            temperature: 0.1
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 22808a02-a379-4f82-b469-144c2dc0ed8c
          role: system
          text: 'You are a query classifier. Your goal is to decide whether the user‚Äôs
            message is one of the following: vague, in scope, out of scope, or chit
            chat. Always think step-by-step and follow the exact order below.


            Category Definitions:


            chit chat: Social niceties and conversational messages about the assistant
            or user with no real task or domain topic. Examples: "how are you," "what
            do you do," "can you help me?"


            vague: Statements, topic fragments, or messages that aren‚Äôt clear requests,
            questions, or tasks. Usually, just a noun or noun phrase with no obvious
            problem or actionable intent. Examples: "payroll," "leave," "qard hasan‚Äù


            in scope: Clear, direct questions, commands or problem statements related
            to HR/employee-operations, such as: payroll/salary, benefits/insurance/claims,
            leave/vacation/sick, attendance/overtime, expenses/per diem, onboarding/offboarding,
            recruitment/hiring, training, performance review/appraisal, promotion/bonus,
            resignation/termination, HR policy/handbook, bank services or products
            as well as queries regarding systems (e.g., qardh, qard, murabaha, boubyan,
            boubyani, takaful, tawasol, pifss, mgrp, sahel, hrbp, oracle, hub, gig,
            happiness account/accounts) or bank accounts/portals used for HR and employee
            services. Includes all clear HR and employee operations requests.


            out of scope: Clear questions, requests, or problem statements that are
            NOT about the HR/employee-operations areas defined above. Any clear, actionable
            queries that are unrelated to the in scope list.


            Decision order (always follow this strict order):


            If the message is purely social or about the user/assistant with no domain/task,
            label it chit chat.

            Else, if the message is a clear question/request/problem related to in
            scope topics, label it in scope.

            Else, if the message is a clear question/request/problem about any other
            topic, label it out of scope.

            Else, if it‚Äôs a topic fragment, non-actionable noun, or unclear what is
            being asked/requested, label it vague.

            If a message mixes a greeting with a real question, ignore the greeting
            and classify based on the question. If the message is about the assistant‚Äôs
            abilities/capabilities ("how can you help?"), label it chit chat unless
            it is explicitly tied to an in scope domain/topic.


            Return exactly one of these four category strings: chit chat, vague, in
            scope, out of scope.'
        - id: cf1f4031-1f4e-48a6-8151-d381a8e436ca
          role: user
          text: 'Employee inquiry:

            {{#context#}}'
        retry_config:
          max_retries: '3'
          retry_enabled: true
          retry_interval: '500'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              Greeting:
                description: Is the query a greeting?
                enum:
                - 'Yes'
                - 'No'
                type: string
              about_hr:
                description: 'If the intention is clear: Is the question actually
                  related to employee lifecycle/employee policies or is it related
                  to another area?'
                enum:
                - Relates to Employee Support
                - Does Not Relate to Employee Support
                - N/A
                type: string
              about_hr_reason:
                description: Explain why you considered the inquiry to be related
                  to employee support, other, or inapplicable if it had an ambiguous
                  intent.
                type: string
              action_if_ambiguous:
                description: 'If you classify it as vague intent: What would you ask
                  the employee to clarify their intent? If it is clear, write N/A'
                type: string
              clarity_reason:
                description: Explain why you chose it (Does the inquiry contain a
                  clear request or question? Or is it unclear and needs clarification?)
                type: string
              final_answer:
                description: 'Write the final classification for only one of these
                  options: (Clear Intent ‚Äì Relates to Employee Support, Clear Intent
                  ‚Äì Does Not Relate to Employee Support, Vague Intent)'
                enum:
                - Clear_Intent_Relates_to_Employee_Support
                - Clear_Intent_Does_Not_Relate_to_Employee_Support
                - Greeting
                - VagueIntent
                type: string
              intent_clarity:
                description: Is the question or request clear (clear intent) or is
                  it just a word or phrase without a specific purpose or explicit
                  request (vague intent)?
                enum:
                - Clear Intent
                - Vague Intent
                type: string
            required:
            - intent_clarity
            - clarity_reason
            - action_if_ambiguous
            - about_hr
            - about_hr_reason
            - final_answer
            - Greeting
            type: object
        structured_output_enabled: false
        title: query classify
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '17463502700320'
      position:
        x: 2719.651532182385
        y: -320.10586031697767
      positionAbsolute:
        x: 2719.651532182385
        y: -320.10586031697767
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 31019e32-f98a-4ddd-8545-02c2d90c371f
            value: in scope
            varType: string
            variable_selector:
            - '17463502700320'
            - text
          id: 'true'
          logical_operator: and
        - case_id: 95e24648-4bd9-4a43-86ce-df41ee46f484
          conditions:
          - comparison_operator: contains
            id: 9aac428c-04d6-423a-a3d5-1c382af494d6
            value: out of scope
            varType: string
            variable_selector:
            - '17463502700320'
            - text
          id: 95e24648-4bd9-4a43-86ce-df41ee46f484
          logical_operator: and
        - case_id: 6cb35916-2fd4-4275-8e6d-6d24b6b13f83
          conditions:
          - comparison_operator: contains
            id: 520f8784-0ad7-4118-b7db-f359af1e5d36
            value: chit chat
            varType: string
            variable_selector:
            - '17463502700320'
            - text
          id: 6cb35916-2fd4-4275-8e6d-6d24b6b13f83
          logical_operator: and
        - case_id: b593749e-0c2d-4e5a-aadc-f7870ba2cdae
          conditions:
          - comparison_operator: contains
            id: b8fd83ec-94b7-4cf5-9100-884a67dd1e26
            value: vague
            varType: string
            variable_selector:
            - '17463502700320'
            - text
          id: b593749e-0c2d-4e5a-aadc-f7870ba2cdae
          logical_operator: and
        desc: ''
        selected: false
        title: per classification
        type: if-else
      height: 269
      id: '17463504203540'
      position:
        x: 3034.5500578992446
        y: -196.21628831096973
      positionAbsolute:
        x: 3034.5500578992446
        y: -196.21628831096973
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "import re\n\ndef extract_question(text):\n    \"\"\"\n    Extracts\
          \ the question from a string formatted as \"question:QUESTION \\nanswer:ANSWER\"\
          .\n    Args:\n        text: The input string containing the question and\
          \ answer.\n    Returns:\n        The extracted question as a string, or\
          \ None if no question is found.\n    \"\"\"\n    match = re.search(r\"question:(.*)\\\
          n\", text)\n    if match:\n        return match.group(1).strip()\n    else:\n\
          \        return None\n\ndef main(KBanswer: list) -> dict:\n    questions\
          \ = []  # List to accumulate questions\n    \n    for each in KBanswer:\n\
          \        # Keep only the 'content' key\n        content = each.get('content')\n\
          \        if content:\n            question = extract_question(content)\n\
          \            if question:\n                questions.append(question)\n\
          \    \n    # Remove duplicates while preserving order\n    seen = set()\n\
          \    unique_questions = []\n    for q in questions:\n        if q not in\
          \ seen:\n            seen.add(q)\n            unique_questions.append(q)\n\
          \    \n    # Limit to maximum of 3 questions\n    limited_questions = unique_questions[:3]\n\
          \    \n    # Format the result\n    result = '\\n'.join(f'- {question}'\
          \ for question in limited_questions)\n    return {'result': result}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: Get Questions
        type: code
        variables:
        - value_selector:
          - '1748414761482'
          - result
          variable: KBanswer
      height: 53
      id: '1748414814447'
      position:
        x: 4033.0376706205907
        y: -108.20394424389521
      positionAbsolute:
        x: 4033.0376706205907
        y: -108.20394424389521
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            num_ctx: 2048
            repeat_penalty: 1.15
            seed: 12345
            stop:
            - \n\n
            - 'User:'
            temperature: 0.1
            top_k: 40
            top_p: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 2f5ec0d1-b620-4e92-bd25-64489ee1874e
          role: system
          text: 'You are an assistant that helps users clarify their requests. Your
            ONLY job is to suggest questions back to the user.

            ¬†

            Your response MUST follow this exact template. Do not add or remove anything
            from the template structure.

            ¬†

            TEMPLATE:

            "Thank you for your inquiry. To provide better assistance, could you please
            clarify your request? Here are some ideas that might help you:

            - [Deduplicated Question 1]

            - [Deduplicated Question 2]

            ..."

            ¬†

            Your task:

            1.¬†¬†Receive the list of suggested questions.

            2.¬†¬†Remove any questions that have the same meaning.

            3.¬†¬†Insert the unique, remaining questions into the TEMPLATE.

            4.¬†¬†Output the complete text from the TEMPLATE.

            ¬†

            If the list of questions is empty, respond ONLY with: "Thank you for your
            inquiry. Could you please clarify your needs so I can assist you better?"'
        - id: 5966cc03-d9dc-422e-b0e9-44fa129cde96
          role: user
          text: 'User Query:

            {{#sys.query#}}

            Suggested questions:

            {{#1748414814447.result#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        title: Suggest Questions
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1755084125884'
      position:
        x: 4415.276553359622
        y: -108.20394424389521
      positionAbsolute:
        x: 4415.276553359622
        y: -108.20394424389521
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        code: "import re\n\ndef extract_question(text):\n    \"\"\"\n    Extracts\
          \ the question from a string formatted as \"question:QUESTION \\nanswer:ANSWER\"\
          .\n    Args:\n        text: The input string containing the question and\
          \ answer.\n    Returns:\n        The extracted question as a string, or\
          \ None if no question is found.\n    \"\"\"\n    match = re.search(r\"question:(.*)\\\
          n\", text)\n    if match:\n        return match.group(1).strip()\n    else:\n\
          \        return None\n\ndef main(KBanswer: dict) -> str:\n    questions\
          \ = []  # List to accumulate questions\n    \n    for each in KBanswer:\n\
          \        # Remove all keys except 'content'\n        each = {'content':\
          \ each['content']}\n        text = each.get('content')\n        if text:\n\
          \            question = extract_question(text)\n            if question:\n\
          \                questions.append(question)  # Add extracted question to\
          \ the list\n    \n    result = '\\n'.join(f'- {question}' for question in\
          \ questions)\n    return {'result': result}"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ÿßÿ≥ÿ™ÿÆŸÑÿßÿµ ÿßŸÑÿßÿ≥ÿ™ÿπŸÑÿßŸÖÿßÿ™
        type: code
        variables:
        - value_selector:
          - '1748426591842'
          - result
          variable: KBanswer
      height: 53
      id: '1748426676928'
      position:
        x: 3196.4432207645696
        y: 806.6118197345533
      positionAbsolute:
        x: 3196.4432207645696
        y: 806.6118197345533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: true
          variable_selector:
          - '1748426676928'
          - result
        desc: ''
        model:
          completion_params:
            num_ctx: 2048
            repeat_penalty: 1.15
            seed: 12345
            stop:
            - \n\n
            - 'User:'
            temperature: 0.1
            top_k: 40
            top_p: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: f855b425-459f-49db-aa4a-497fcf14051b
          role: system
          text: 'ÿ™ŸÑŸÇŸäÿ™ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±Ÿãÿß ŸÖŸÜ ŸÖÿ≥ÿ™ÿÆÿØŸÖ. ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ŸÅÿßÿ±ÿ∫ÿ©ÿå ÿßÿ∑ŸÑÿ® ŸÖŸÜ
            ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ™Ÿàÿ∂Ÿäÿ≠ ÿ∑ŸÑÿ®Ÿá ŸÑÿ™ÿ™ŸÖŸÉŸÜ ŸÖŸÜ ŸÖÿ≥ÿßÿπÿØÿ™Ÿá. ÿ•ÿ∞ÿß ÿ™ŸàŸÅÿ±ÿ™ ÿ£ÿ≥ÿ¶ŸÑÿ©ÿå ÿßŸÇÿ™ÿ±ÿ≠Ÿáÿß ŸÖÿπ ŸÜÿµŸäÿ≠ÿ©
            ÿ™Ÿàÿ∂Ÿäÿ≠Ÿäÿ©.


            ÿßŸÑÿ™ÿ≤ŸÖ ÿ®ÿßŸÑŸÇŸàÿßÿπÿØ ÿßŸÑÿ™ÿßŸÑŸäÿ©:

            ÿßÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ŸÉŸÖÿß ŸáŸä ÿØŸàŸÜ ÿ•ÿ∂ÿßŸÅÿ© ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ¨ÿØŸäÿØÿ©.

            ŸÑÿß ÿ™ŸÇÿ™ÿ±ÿ≠ ÿ£ÿ≥ÿ¶ŸÑÿ© ÿ•ÿ∂ÿßŸÅŸäÿ© ÿ≠ÿ™Ÿâ ŸÑŸà ŸÉÿßŸÜÿ™ ÿßŸÑŸÇÿßÿ¶ŸÖÿ© ŸÅÿßÿ±ÿ∫ÿ©.

            ÿßÿ≠ÿ∞ŸÅ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖŸÉÿ±ÿ±ÿ© (ÿ∞ÿßÿ™ ŸÜŸÅÿ≥ ÿßŸÑŸÖÿπŸÜŸâ) ŸÅŸÇÿ∑ ŸÑÿ™ÿ¨ŸÜÿ® ÿßŸÇÿ™ÿ±ÿßÿ≠ ŸÜŸÅÿ≥ ÿßŸÑÿ≥ÿ§ÿßŸÑ ŸÖÿ±ÿ™ŸäŸÜ.

            ŸÑÿß ÿ™ÿ∂ŸÅ ÿ£Ÿä ÿ¥Ÿäÿ° ÿ¢ÿÆÿ± ŸÑŸÑÿ•ÿ¨ÿßÿ®ÿ©.


            ŸÖÿ´ÿßŸÑ ŸÖÿπ ÿ£ÿ≥ÿ¶ŸÑÿ© ŸÖŸÇÿ™ÿ±ÿ≠ÿ©:

            ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ÿ®ÿ±ÿßŸÖÿ¨ ÿßŸÑÿ™ÿØÿ±Ÿäÿ®"

            ÿßŸÑÿ±ÿØ: ÿ¥ŸÉÿ±Ÿãÿß ŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ŸÉ ÿπŸÜ ÿ®ÿ±ÿßŸÖÿ¨ ÿßŸÑÿ™ÿØÿ±Ÿäÿ®. ŸÑÿ™ŸÇÿØŸäŸÖ ŸÖÿ≥ÿßÿπÿØÿ© ÿ£ŸÅÿ∂ŸÑÿå ŸáŸÑ ŸäŸÖŸÉŸÜŸÉ ÿ™Ÿàÿ∂Ÿäÿ≠
            ÿ£Ÿä ÿßŸÑÿ®ÿ±ÿßŸÖÿ¨ ÿßŸÑÿ™ÿØÿ±Ÿäÿ®Ÿäÿ© ÿ™Ÿáÿ™ŸÖ ÿ®Ÿáÿßÿü ÿ•ŸÑŸäŸÉ ÿ®ÿπÿ∂ ÿßŸÑÿ£ŸÅŸÉÿßÿ± ÿßŸÑÿ™Ÿä ŸÇÿØ ÿ™ÿ≥ÿßÿπÿØŸÉ: (ŸÇÿßÿ¶ŸÖÿ©
            ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ©)


            ŸÖÿ´ÿßŸÑ ÿ®ÿØŸàŸÜ ÿ£ÿ≥ÿ¶ŸÑÿ© ŸÖŸÇÿ™ÿ±ÿ≠ÿ©:

            ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ: "ÿßŸÑÿ™ÿπŸÑŸäŸÖ"

            ÿßŸÑÿ±ÿØ: ÿ¥ŸÉÿ±Ÿãÿß ŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ŸÉ ÿπŸÜ ÿßŸÑÿ™ÿπŸÑŸäŸÖ. ŸáŸÑ ŸäŸÖŸÉŸÜŸÉ ÿ™Ÿàÿ∂Ÿäÿ≠ ÿßÿ≠ÿ™Ÿäÿßÿ¨ÿßÿ™ŸÉ ŸÑŸÖÿ≥ÿßÿπÿØÿ™ŸÉ ÿ®ÿ¥ŸÉŸÑ
            ÿ£ŸÅÿ∂ŸÑÿü

            ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿßŸÑÿ±ÿØ ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©.'
        - id: b48d1179-7d08-4faf-9cbc-1c62b4d1f1d8
          role: user
          text: 'ÿßÿ≥ÿ™ÿπŸÑÿßŸÖ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ:

            {{#sys.query#}}

            ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖŸÇÿ™ÿ±ÿ≠ÿ©:

            {{#1748426676928.result#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        title: ÿßŸÑÿ±ÿØ ÿ®ÿßŸÑŸÖŸÇÿ™ÿ±ÿ≠ÿßÿ™
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1755149964269'
      position:
        x: 3498.0205016569575
        y: 806.6118197345533
      positionAbsolute:
        x: 3498.0205016569575
        y: 806.6118197345533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            stop: []
            temperature: 0.1
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 776c22b5-beb2-4fba-a247-a9feb119884c
          role: system
          text: 'You are Boubyan Bank‚Äôs HR assistant for employees. Your job here
            is to handle Chit_Chat messages (social or conversational messages about
            you/the user) with friendly, concise replies and a gentle offer of help.
            You can help with leave requests, payroll and benefits info, and other
            HR-related issues.


            Instructions


            Be brief: 1‚Äì2 short sentences.

            Be friendly and professional; keep brand-safe tone.

            Acknowledge the sentiment (greeting, thanks, farewell, apology, compliment,
            small talk).

            Add a light offer of help tailored to HR support (e.g., ‚ÄúHow can I help
            you today?‚Äù).

            Do not ask for personal data unless needed for the next step.

            No labels, no explanations‚Äîreturn only the reply text.


            If the user input is not a greeting, farewell, or a direct request for
            acknowledgement, do not provide a detailed or casual response.

            Avoid engaging in casual conversation or providing elaborated answers
            to non-greeting messages. '
        - id: e317e5e0-cfa5-41e1-8ac8-b4d183fee45d
          role: user
          text: '{{#sys.query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        title: Chit-Chat Reply
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1748862713728'
      position:
        x: 3522.2719667211236
        y: -283.50470983893024
      positionAbsolute:
        x: 3522.2719667211236
        y: -283.50470983893024
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1748862713728.text#}}'
        desc: ''
        selected: false
        title: Greeting Query Reply
        type: answer
        variables: []
      height: 103
      id: '1748862844056'
      position:
        x: 4033.0376706205907
        y: -283.50470983893024
      positionAbsolute:
        x: 4033.0376706205907
        y: -283.50470983893024
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            stop: []
            temperature: 0.1
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: ad4ec588-d98e-4f29-80d9-53c286604db8
          role: system
          text: "ÿ£ŸÜÿ™ ŸÖÿ≥ÿßÿπÿØ ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ© ŸÑŸÖŸàÿ∏ŸÅŸä ÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜ. ÿπŸÖŸÑŸÉ ŸáŸÜÿß ŸáŸà ÿßŸÑÿ±ÿØ ÿπŸÑŸâ\
            \ ÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿØÿ±ÿØÿ¥ÿ© ÿßŸÑÿßÿ¨ÿ™ŸÖÿßÿπŸäÿ© ÿ£Ÿà ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿ≠ŸàŸÑŸÉ ÿ£Ÿà ÿ≠ŸàŸÑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖÿå Ÿàÿ∞ŸÑŸÉ ÿ®ÿ•ÿ¨ÿßÿ®ÿßÿ™\
            \ ŸàÿØŸäÿ© ŸàŸÖÿÆÿ™ÿµÿ±ÿ© ŸÖÿπ ÿπÿ±ÿ∂ ŸÑÿ∑ŸäŸÅ ŸÑŸÑŸÖÿ≥ÿßÿπÿØÿ©. ŸäŸÖŸÉŸÜŸÉ ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ© ŸÅŸä ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ•ÿ¨ÿßÿ≤ÿ©ÿå\
            \ ŸàŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ±Ÿàÿßÿ™ÿ® ŸàÿßŸÑŸÖÿ≤ÿßŸäÿßÿå Ÿàÿ£Ÿä ŸÖÿ≥ÿßÿ¶ŸÑ ÿ£ÿÆÿ±Ÿâ ÿ™ÿ™ÿπŸÑŸÇ ÿ®ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ©.\n\n\
            ÿßŸÑÿ™ÿπŸÑŸäŸÖÿßÿ™\n\nŸÉŸÜ ŸÖÿÆÿ™ÿµÿ±Ÿãÿß: ÿ±ÿØ ŸÅŸä ÿ¨ŸÖŸÑÿ© Ÿàÿßÿ≠ÿØÿ© ÿ£Ÿà ÿ¨ŸÖŸÑÿ™ŸäŸÜ ŸÇÿµŸäÿ±ÿ™ŸäŸÜ.\nŸÉŸÜ ŸàÿØŸàÿØŸãÿß\
            \ Ÿàÿßÿ≠ÿ™ÿ±ÿßŸÅŸäŸãÿßÿõ ÿ≠ÿßŸÅÿ∏ ÿπŸÑŸâ ŸÜÿ®ÿ±ÿ© ÿ¢ŸÖŸÜÿ© ÿ™ÿπŸÉÿ≥ ÿµŸàÿ±ÿ© ÿßŸÑÿ®ŸÜŸÉ.\nÿßÿπÿ™ÿ±ŸÅ ÿ®ÿßŸÑŸÖÿ¥ÿßÿπÿ± (ÿ™ÿ≠Ÿäÿ©ÿå\
            \ ÿ¥ŸÉÿ±ÿå ŸàÿØÿßÿπÿå ÿßÿπÿ™ÿ∞ÿßÿ±ÿå ŸÖÿØÿ≠ÿå ÿ≠ÿØŸäÿ´ ÿ¨ÿßŸÜÿ®Ÿä).\nÿ£ÿ∂ŸÅ ÿπÿ±ÿ∂Ÿãÿß ÿ®ÿ≥Ÿäÿ∑Ÿãÿß ŸÑŸÑŸÖÿ≥ÿßÿπÿØÿ© Ÿäÿ±ÿ™ÿ®ÿ∑\
            \ ÿ®ÿØÿπŸÖ ÿ¥ÿ§ŸàŸÜ ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ (ŸÖÿ´ŸÑ: \"ŸÉŸäŸÅ ŸäŸÖŸÉŸÜŸÜŸä ŸÖÿ≥ÿßÿπÿØÿ™ŸÉ ÿßŸÑŸäŸàŸÖÿü\").\nŸÑÿß ÿ™ÿ∑ŸÑÿ® ÿ®ŸäÿßŸÜÿßÿ™\
            \ ÿ¥ÿÆÿµŸäÿ© ÿ•ŸÑÿß ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿ∞ŸÑŸÉ ÿ∂ÿ±Ÿàÿ±ŸäŸãÿß ŸÑŸÑÿÆÿ∑Ÿàÿ© ÿßŸÑÿ™ÿßŸÑŸäÿ©.\nŸÑÿß ÿ™ÿ∂ÿπ ÿπŸÜÿßŸàŸäŸÜ ÿ£Ÿà ÿ¥ÿ±Ÿàÿ≠ÿßÿ™\
            \ ÿ£ÿ¨ÿ® ŸÅŸÇÿ∑ ÿ®ÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑÿ±ÿØ.\n\nÿ•ÿ∞ÿß ŸÑŸÖ ŸäŸÉŸÜ ÿ•ÿØÿÆÿßŸÑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿπÿ®ÿßÿ±ÿ© ÿπŸÜ ÿ™ÿ≠Ÿäÿ© ÿ£Ÿà ŸàÿØÿßÿπ\
            \ ÿ£Ÿà ÿ∑ŸÑÿ® ŸÖÿ®ÿßÿ¥ÿ± ŸÑŸÑÿ•ŸÇÿ±ÿßÿ±ÿå ŸÅŸÑÿß ÿ™ŸÇÿØŸÖ ÿ•ÿ¨ÿßÿ®ÿ© ŸÖŸÅÿµŸÑÿ© ÿ£Ÿà ÿ±ÿØ ÿ∫Ÿäÿ± ÿ±ÿ≥ŸÖŸä.  \nÿ™ÿ¨ŸÜÿ® ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉÿ©\
            \ ŸÅŸä ÿßŸÑÿ£ÿ≠ÿßÿØŸäÿ´ ÿ∫Ÿäÿ± ÿßŸÑÿ±ÿ≥ŸÖŸäÿ© ÿ£Ÿà ÿ™ŸÇÿØŸäŸÖ ÿ•ÿ¨ÿßÿ®ÿßÿ™ ŸÖŸàÿ≥ÿπÿ© ÿπŸÑŸâ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿ∫Ÿäÿ± ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ©\
            \ ÿ®ÿßŸÑÿ™ÿ≠Ÿäÿßÿ™.\n\nÿ™ÿßŸÉÿØ ŸÖŸÜ ÿßŸÑÿ±ÿØ ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©."
        - id: ac1acc55-39b1-4dd7-9561-aba382ba87be
          role: user
          text: '{{#sys.query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: true
        title: ÿ±ÿØ ÿπŸÑŸâ ÿ™ÿ≠Ÿäÿ©
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '1750326385463'
      position:
        x: 2896.7706884703944
        y: 624.9968076416227
      positionAbsolute:
        x: 2896.7706884703944
        y: 624.9968076416227
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        answer: '{{#1750326385463.text#}}'
        desc: ''
        selected: false
        title: ÿ±ÿØ ŸÜŸáÿßÿ¶Ÿä ÿπŸÑŸâ ÿßŸÑÿ™ÿ≠Ÿäÿ©
        type: answer
        variables: []
      height: 103
      id: '1750326565070'
      position:
        x: 3824.8431434000727
        y: 624.9968076416227
      positionAbsolute:
        x: 3824.8431434000727
        y: 624.9968076416227
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        dataset_ids:
        - Thq62v+R8O6R1weUrgrTGpKkYE8mAAhqeoNKvudO98RJW6TzZKiVEc+5KZyd8dJb
        desc: ''
        isInIteration: true
        isInLoop: false
        iteration_id: '1753164834772'
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: weighted_score
          reranking_model:
            model: Qwen/Qwen3-Reranker-0.6B
            provider: langgenius/openai_api_compatible/openai_api_compatible
          score_threshold: 0.25
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: all-minilm:33m
              embedding_provider_name: langgenius/ollama/ollama
              vector_weight: 1
        query_variable_selector:
        - '1746016424681'
        - result
        retrieval_mode: multiple
        selected: false
        title: Knowledge Retrieval 5 (1)
        type: knowledge-retrieval
      height: 91
      id: '17551503028730'
      position:
        x: 4661.703077277907
        y: 692.7679174854668
      positionAbsolute:
        x: 4661.703077277907
        y: 692.7679174854668
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
      zIndex: 1002
    - data:
        dataset_ids:
        - zCUVv5TANcXzjZbdeTYup5G4qoiMXV+w4QiwYygO2TqktXB3OPq4gp/TXwLyzvHR
        desc: ''
        isInIteration: true
        isInLoop: false
        iteration_id: '1753246681375'
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: weighted_score
          reranking_model:
            model: Qwen/Qwen3-Reranker-0.6B
            provider: langgenius/openai_api_compatible/openai_api_compatible
          score_threshold: 0.25
          top_k: 10
          weights:
            keyword_setting:
              keyword_weight: 0
            vector_setting:
              embedding_model_name: snowflake-arctic-embed2
              embedding_provider_name: langgenius/ollama/ollama
              vector_weight: 1
        query_variable_selector:
        - '1745904416023'
        - result
        retrieval_mode: multiple
        selected: false
        title: ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ (1)
        type: knowledge-retrieval
      height: 91
      id: '17551504064580'
      position:
        x: 5008.962814214889
        y: 402.3002335535667
      positionAbsolute:
        x: 5008.962814214889
        y: 402.3002335535667
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
      zIndex: 1002
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            num_ctx: 2048
            seed: -1
            stop:
            - \n
            - 'User:'
            - 'Employee:'
            temperature: 0.1
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 776c22b5-beb2-4fba-a247-a9feb119884c
          role: system
          text: "You are a professional support agent for Boubyan Bank, specializing\
            \ in providing information about Boubyan Bank‚Äôs HR-related issues.\n\n\
            Instruction:\nKindly respond to user queries in a polite and welcoming\
            \ tone and inform them Unfortunately, there is no information available\
            \ for your current Query. \nKindly ask them to submit questions specifically\
            \ about Boubyan Bank‚Äôs leave requests, payroll and benefits info, and\
            \ other HR-related issues."
        - id: e317e5e0-cfa5-41e1-8ac8-b4d183fee45d
          role: user
          text: 'Query : {{#sys.query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        title: Non-HR related Reply
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '17575963520660'
      position:
        x: 3530.1156946348738
        y: 47.746135217943646
      positionAbsolute:
        x: 3530.1156946348738
        y: 47.746135217943646
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        memory:
          query_prompt_template: '{{#sys.query#}}'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: true
            size: 5
        model:
          completion_params:
            num_ctx: 2048
            seed: -1
            stop:
            - \n
            - 'User:'
            - 'Employee:'
            temperature: 0.7
          mode: chat
          name: gpt-oss:20b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: ad4ec588-d98e-4f29-80d9-53c286604db8
          role: system
          text: 'ÿ£ŸÜÿ™ ŸÖŸàÿ∏ŸÅ ÿØÿπŸÖ ŸÖÿ≠ÿ™ÿ±ŸÅ ŸÅŸä ÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜÿå ŸàŸÖÿ™ÿÆÿµÿµ ŸÅŸä ÿ™ŸÇÿØŸäŸÖ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ©
            ÿ®ŸÇÿ∂ÿßŸäÿß ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ© ŸÅŸä ÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜ.


            Ÿäÿ±ÿ¨Ÿâ ÿßŸÑÿ±ÿØ ÿπŸÑŸâ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿ®ŸÜÿ®ÿ±ÿ© ŸÖŸáÿ∞ÿ®ÿ© ŸàŸÖÿ±ÿ≠ÿ®ÿ©ÿå Ÿàÿ•ÿ®ŸÑÿßÿ∫ŸáŸÖ ÿ®ÿ£ŸÜŸáÿå
            ŸÑŸÑÿ£ÿ≥ŸÅÿå ŸÑÿß ÿ™ÿ™ŸàŸÅÿ± ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿπŸÜ ÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ±ŸáŸÖ ÿßŸÑÿ≠ÿßŸÑŸä.

            Ÿäÿ±ÿ¨Ÿâ ŸÖŸÜŸáŸÖ ÿ™ŸÇÿØŸäŸÖ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ•ÿ¨ÿßÿ≤ÿßÿ™ÿå ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ±Ÿàÿßÿ™ÿ® ŸàÿßŸÑŸÖÿ≤ÿßŸäÿßÿå
            Ÿàÿ∫Ÿäÿ±Ÿáÿß ŸÖŸÜ ÿßŸÑŸÇÿ∂ÿßŸäÿß ÿßŸÑŸÖÿ™ÿπŸÑŸÇÿ© ÿ®ÿßŸÑŸÖŸàÿßÿ±ÿØ ÿßŸÑÿ®ÿ¥ÿ±Ÿäÿ© ŸÅŸä ÿ®ŸÜŸÉ ÿ®Ÿàÿ®ŸäÿßŸÜ ŸÅŸÇÿ∑.

            ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿßŸÑÿ±ÿØ ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©.'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: '500'
        selected: false
        title: ÿ±ÿØ ŸÅŸä ŸÖÿ¨ÿßŸÑ ÿ¢ÿÆÿ±
        type: llm
        variables: []
        vision:
          enabled: false
      height: 120
      id: '17576025603600'
      position:
        x: 3111.950517842951
        y: 487.6987786790679
      positionAbsolute:
        x: 3111.950517842951
        y: 487.6987786790679
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    viewport:
      x: -1295.6715717000372
      y: 67.25159617918854
      zoom: 0.5000000000000002
